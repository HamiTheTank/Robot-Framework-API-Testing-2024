<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.0.1 (Python 3.12.4 on win32)" generated="2024-08-13T13:38:21.351340" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="C:\Users\Vikto\source\repos\Robot Framework API Testing 2024\tests">
<suite id="s1-s1" name="TC 001 Get Request" source="C:\Users\Vikto\source\repos\Robot Framework API Testing 2024\tests\TC_001_Get_Request.robot">
<test id="s1-s1-t1" name="Get_Student_By_ID" line="11">
<kw name="test setup" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:21.663952" level="INFO">Creating Session using : alias=current_session, url=https://thetestingworldapi.com/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>current_session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-13T13:38:21.662935" elapsed="0.001017"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:21.662935" elapsed="0.001017"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:22.366037" level="INFO">GET Request : url=https://thetestingworldapi.com/api/studentsDetails/10305526 
 path_url=/api/studentsDetails/10305526 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-08-13T13:38:22.366037" level="INFO">GET Response : url=https://thetestingworldapi.com/api/studentsDetails/10305526 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:02 GMT', 'Content-Length': '136'} 
 body={"status":"true","data":{"id":10305526,"first_name":"Angelina","middle_name":"Jolie","last_name":"Pamela","date_of_birth":"01/03/1977"}} 
 </msg>
<msg time="2024-08-13T13:38:22.366037" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:22.367542" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>api/studentsDetails/${student_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:21.663952" elapsed="0.703590"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:22.367542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:22.367542" elapsed="0.001009"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:22.369071" level="INFO">${json} = {'status': 'true', 'data': {'id': 10305526, 'first_name': 'Angelina', 'middle_name': 'Jolie', 'last_name': 'Pamela', 'date_of_birth': '01/03/1977'}}</msg>
<var>${json}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:22.368551" elapsed="0.000520"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:22.378609" level="INFO">${first_name} = ['Angelina']</msg>
<var>${first_name}</var>
<arg>${json}</arg>
<arg>$..first_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:22.369071" elapsed="0.009538"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${first_name[0]}</arg>
<arg>${expected_first_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:22.378609" elapsed="0.000999"/>
</kw>
<kw name="test teardown" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:22.380172" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-08-13T13:38:22.380172" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:22.380172" elapsed="0.000000"/>
</kw>
<doc>Fetch a student by ID and validate its first name</doc>
<tag>api-test</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:21.662010" elapsed="0.718983"/>
</test>
<status status="PASS" start="2024-08-13T13:38:21.373822" elapsed="1.007440"/>
</suite>
<suite id="s1-s2" name="TC 002 Post Request" source="C:\Users\Vikto\source\repos\Robot Framework API Testing 2024\tests\TC_002_Post_Request.robot">
<test id="s1-s2-t1" name="TC_002_Validate_Post_Request" line="6">
<kw name="test setup" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:22.386294" level="INFO">Creating Session using : alias=current_session, url=https://thetestingworldapi.com/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>current_session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-13T13:38:22.384788" elapsed="0.001506"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:22.384788" elapsed="0.001506"/>
</kw>
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2024-08-13T13:38:22.386294" level="INFO">${body} = {'first_name': 'FirstName', 'middle_name': 'MiddleName', 'last_name': 'LastName', 'date_of_birth': '12/11/2004'}</msg>
<var>${body}</var>
<arg>C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/TC_002_Test_Data.json</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2024-08-13T13:38:22.386294" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:23.623894" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"first_name": "FirstName", "middle_name": "MiddleName", "last_name": "LastName", "date_of_birth": "12/11/2004"}' 
 </msg>
<msg time="2024-08-13T13:38:23.623894" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10305995', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:04 GMT', 'Content-Length': '119'} 
 body={"id":10305995,"first_name":"FirstName","middle_name":"MiddleName","last_name":"LastName","date_of_birth":"12/11/2004"} 
 </msg>
<msg time="2024-08-13T13:38:23.623894" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:23.625133" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${body}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:22.387297" elapsed="1.237836"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:23.626136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:23.625133" elapsed="0.001003"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:23.626942" level="INFO">${json} = {'id': 10305995, 'first_name': 'FirstName', 'middle_name': 'MiddleName', 'last_name': 'LastName', 'date_of_birth': '12/11/2004'}</msg>
<var>${json}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:23.626136" elapsed="0.000806"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:23.635981" level="INFO">${first_name} = ['FirstName']</msg>
<var>${first_name}</var>
<arg>${json}</arg>
<arg>$..first_name</arg>
<arg>fail_on_empty=${True}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:23.627449" elapsed="0.008532"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${first_name[0]}</arg>
<arg>FirstName</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:23.635981" elapsed="0.000000"/>
</kw>
<kw name="test teardown" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:23.637491" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-08-13T13:38:23.637491" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:23.637491" elapsed="0.000000"/>
</kw>
<doc>Create a new student</doc>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:22.384788" elapsed="1.252703"/>
</test>
<status status="PASS" start="2024-08-13T13:38:22.381779" elapsed="1.255712"/>
</suite>
<suite id="s1-s3" name="TC 003 Delete Request" source="C:\Users\Vikto\source\repos\Robot Framework API Testing 2024\tests\TC_003_Delete_Request.robot">
<test id="s1-s3-t1" name="TC_003_Validate_Delete_Request" line="6">
<kw name="test setup" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:23.643912" level="INFO">Creating Session using : alias=current_session, url=https://thetestingworldapi.com/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>current_session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-13T13:38:23.642908" elapsed="0.001004"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:23.642908" elapsed="0.001004"/>
</kw>
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2024-08-13T13:38:23.643912" level="INFO">${body} = {'first_name': 'FIRST_NAME', 'middle_name': 'MIDDLE_NAME', 'last_name': 'LAST_NAME', 'date_of_birth': '31.12.1999'}</msg>
<var>${body}</var>
<arg>C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/TC_003_Test_Data.json</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2024-08-13T13:38:23.643912" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:24.197329" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"first_name": "FIRST_NAME", "middle_name": "MIDDLE_NAME", "last_name": "LAST_NAME", "date_of_birth": "31.12.1999"}' 
 </msg>
<msg time="2024-08-13T13:38:24.197329" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10305996', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:04 GMT', 'Content-Length': '122'} 
 body={"id":10305996,"first_name":"FIRST_NAME","middle_name":"MIDDLE_NAME","last_name":"LAST_NAME","date_of_birth":"31.12.1999"} 
 </msg>
<msg time="2024-08-13T13:38:24.197329" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:24.197836" level="INFO">${post_response} = &lt;Response [201]&gt;</msg>
<var>${post_response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${body}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:23.644912" elapsed="0.552924"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:24.198894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${post_response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:24.197836" elapsed="0.001058"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:24.199901" level="INFO">${json} = {'id': 10305996, 'first_name': 'FIRST_NAME', 'middle_name': 'MIDDLE_NAME', 'last_name': 'LAST_NAME', 'date_of_birth': '31.12.1999'}</msg>
<var>${json}</var>
<arg>${post_response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:24.198894" elapsed="0.001007"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:24.209468" level="INFO">${create_IDs} = [10305996]</msg>
<var>${create_IDs}</var>
<arg>${json}</arg>
<arg>$..id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:24.199901" elapsed="0.009567"/>
</kw>
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2024-08-13T13:38:24.209880" level="INFO">${create_ID} = 10305996</msg>
<var>${create_ID}</var>
<arg>${create_IDs[0]}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2024-08-13T13:38:24.209880" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:24.381497" level="INFO">GET Request : url=https://thetestingworldapi.com/api/studentsDetails/10305996 
 path_url=/api/studentsDetails/10305996 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-08-13T13:38:24.381497" level="INFO">GET Response : url=https://thetestingworldapi.com/api/studentsDetails/10305996 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:04 GMT', 'Content-Length': '147'} 
 body={"status":"true","data":{"id":10305996,"first_name":"FIRST_NAME","middle_name":"MIDDLE_NAME","last_name":"LAST_NAME","date_of_birth":"31.12.1999"}} 
 </msg>
<msg time="2024-08-13T13:38:24.381497" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:24.382448" level="INFO">${get_response} = &lt;Response [200]&gt;</msg>
<var>${get_response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails/${create_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:24.210899" elapsed="0.171549"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:24.385035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${get_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:24.383448" elapsed="0.001587"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:24.555971" level="INFO">DELETE Request : url=https://thetestingworldapi.com/api/studentsDetails/10305996 
 path_url=/api/studentsDetails/10305996 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-08-13T13:38:24.555971" level="INFO">DELETE Response : url=https://thetestingworldapi.com/api/studentsDetails/10305996 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:04 GMT', 'Content-Length': '46'} 
 body={"status":"true","msg":"Delete  data success"} 
 </msg>
<msg time="2024-08-13T13:38:24.555971" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:24.556986" level="INFO">${delete_response} = &lt;Response [200]&gt;</msg>
<var>${delete_response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails/${create_ID}</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:24.385035" elapsed="0.171951"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:24.557492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${delete_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:24.557492" elapsed="0.000000"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:24.558955" level="INFO">${delete_response_json} = {'status': 'true', 'msg': 'Delete  data success'}</msg>
<var>${delete_response_json}</var>
<arg>${delete_response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:24.557492" elapsed="0.001463"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:24.574532" level="INFO">${delete_status} = ['true']</msg>
<var>${delete_status}</var>
<arg>${delete_response_json}</arg>
<arg>status</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:24.558955" elapsed="0.015577"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${delete_status[0]}</arg>
<arg>true</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:24.574532" elapsed="0.000997"/>
</kw>
<kw name="test teardown" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:24.575529" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-08-13T13:38:24.575529" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:24.575529" elapsed="0.000000"/>
</kw>
<doc>Create a new student then delete it</doc>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:23.642908" elapsed="0.933626"/>
</test>
<status status="PASS" start="2024-08-13T13:38:23.638511" elapsed="0.938023"/>
</suite>
<suite id="s1-s4" name="TC 004 Put Request" source="C:\Users\Vikto\source\repos\Robot Framework API Testing 2024\tests\TC_004_Put_Request.robot">
<test id="s1-s4-t1" name="TC_004_Validate_Put_Request" line="6">
<kw name="test setup" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:24.582552" level="INFO">Creating Session using : alias=current_session, url=https://thetestingworldapi.com/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>current_session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-13T13:38:24.581552" elapsed="0.001000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:24.581552" elapsed="0.001000"/>
</kw>
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2024-08-13T13:38:24.582552" level="INFO">${test_data_json} = {'CreateData': {'first_name': 'FirstName', 'middle_name': 'MiddleName', 'last_name': 'LastName', 'date_of_birth': '12/11/2004'}, 'UpdateData': {'first_name': 'NewFirstName', 'middle_name': 'NewMiddleN...</msg>
<var>${test_data_json}</var>
<arg>C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/TC_004_Test_Data.json</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2024-08-13T13:38:24.582552" elapsed="0.000000"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2024-08-13T13:38:24.583552" level="INFO">${create_student_json} = {'first_name': 'FirstName', 'middle_name': 'MiddleName', 'last_name': 'LastName', 'date_of_birth': '12/11/2004'}</msg>
<var>${create_student_json}</var>
<arg>${test_data_json}</arg>
<arg>CreateData</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2024-08-13T13:38:24.583552" elapsed="0.000000"/>
</kw>
<kw name="Get From Dictionary" owner="Collections">
<msg time="2024-08-13T13:38:24.584552" level="INFO">${update_student_json} = {'first_name': 'NewFirstName', 'middle_name': 'NewMiddleName', 'last_name': 'NewLastName', 'date_of_birth': '08/03/2005'}</msg>
<var>${update_student_json}</var>
<arg>${test_data_json}</arg>
<arg>UpdateData</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="PASS" start="2024-08-13T13:38:24.583552" elapsed="0.001000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:25.091997" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"first_name": "FirstName", "middle_name": "MiddleName", "last_name": "LastName", "date_of_birth": "12/11/2004"}' 
 </msg>
<msg time="2024-08-13T13:38:25.091997" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10305997', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:05 GMT', 'Content-Length': '119'} 
 body={"id":10305997,"first_name":"FirstName","middle_name":"MiddleName","last_name":"LastName","date_of_birth":"12/11/2004"} 
 </msg>
<msg time="2024-08-13T13:38:25.091997" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:25.092998" level="INFO">${post_response} = &lt;Response [201]&gt;</msg>
<var>${post_response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${create_student_json}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:24.584552" elapsed="0.508446"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:25.092998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${post_response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:25.092998" elapsed="0.001000"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:25.093998" level="INFO">${post_response_json} = {'id': 10305997, 'first_name': 'FirstName', 'middle_name': 'MiddleName', 'last_name': 'LastName', 'date_of_birth': '12/11/2004'}</msg>
<var>${post_response_json}</var>
<arg>${post_response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:25.093998" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:25.102580" level="INFO">${create_IDs} = [10305997]</msg>
<var>${create_IDs}</var>
<arg>${post_response_json}</arg>
<arg>$..id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:25.094999" elapsed="0.007581"/>
</kw>
<kw name="Get Variable Value" owner="BuiltIn">
<msg time="2024-08-13T13:38:25.103559" level="INFO">${create_ID} = 10305997</msg>
<var>${create_ID}</var>
<arg>${create_IDs[0]}</arg>
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<status status="PASS" start="2024-08-13T13:38:25.102580" elapsed="0.000979"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:25.265165" level="INFO">GET Request : url=https://thetestingworldapi.com/api/studentsDetails/10305997 
 path_url=/api/studentsDetails/10305997 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-08-13T13:38:25.265165" level="INFO">GET Response : url=https://thetestingworldapi.com/api/studentsDetails/10305997 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:05 GMT', 'Content-Length': '144'} 
 body={"status":"true","data":{"id":10305997,"first_name":"FirstName","middle_name":"MiddleName","last_name":"LastName","date_of_birth":"12/11/2004"}} 
 </msg>
<msg time="2024-08-13T13:38:25.265165" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:25.265165" level="INFO">${get_response} = &lt;Response [200]&gt;</msg>
<var>${get_response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails/${create_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:25.103559" elapsed="0.161606"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:25.266332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${get_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:25.266332" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${update_student_json}</arg>
<arg>id=${create_ID}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-08-13T13:38:25.267332" elapsed="0.000505"/>
</kw>
<kw name="PUT On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:25.437412" level="INFO">PUT Request : url=https://thetestingworldapi.com/api/studentsDetails/10305997 
 path_url=/api/studentsDetails/10305997 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '137'} 
 body=b'{"first_name": "NewFirstName", "middle_name": "NewMiddleName", "last_name": "NewLastName", "date_of_birth": "08/03/2005", "id": 10305997}' 
 </msg>
<msg time="2024-08-13T13:38:25.437412" level="INFO">PUT Response : url=https://thetestingworldapi.com/api/studentsDetails/10305997 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:05 GMT', 'Content-Length': '46'} 
 body={"status":"true","msg":"update  data success"} 
 </msg>
<msg time="2024-08-13T13:38:25.437412" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:25.438844" level="INFO">${put_response} = &lt;Response [200]&gt;</msg>
<var>${put_response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails/${create_ID}</arg>
<arg>json=${update_student_json}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a PUT request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:25.267837" elapsed="0.171007"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>PUT RESPONSE: ${put_response.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:25.438844" elapsed="0.001483"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:25.441330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${put_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:25.440327" elapsed="0.001003"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:25.441330" level="INFO">${put_response_json} = {'status': 'true', 'msg': 'update  data success'}</msg>
<var>${put_response_json}</var>
<arg>${put_response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:25.441330" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:25.450581" level="INFO">${put_status} = ['true']</msg>
<var>${put_status}</var>
<arg>${put_response_json}</arg>
<arg>status</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:25.441330" elapsed="0.009251"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${put_status[0]}</arg>
<arg>true</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:25.450581" elapsed="0.001399"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:25.616319" level="INFO">GET Request : url=https://thetestingworldapi.com/api/studentsDetails/10305997 
 path_url=/api/studentsDetails/10305997 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-08-13T13:38:25.616319" level="INFO">GET Response : url=https://thetestingworldapi.com/api/studentsDetails/10305997 
 status=200, reason=OK 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:05 GMT', 'Content-Length': '153'} 
 body={"status":"true","data":{"id":10305997,"first_name":"NewFirstName","middle_name":"NewMiddleName","last_name":"NewLastName","date_of_birth":"08/03/2005"}} 
 </msg>
<msg time="2024-08-13T13:38:25.616319" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:25.617758" level="INFO">${get_response} = &lt;Response [200]&gt;</msg>
<var>${get_response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails/${create_ID}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:25.451980" elapsed="0.165778"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:25.619035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${get_response.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:25.617758" elapsed="0.001277"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:25.620035" level="INFO">${get_request_json} = {'status': 'true', 'data': {'id': 10305997, 'first_name': 'NewFirstName', 'middle_name': 'NewMiddleName', 'last_name': 'NewLastName', 'date_of_birth': '08/03/2005'}}</msg>
<var>${get_request_json}</var>
<arg>${get_response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:25.619035" elapsed="0.001000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:25.628538" level="INFO">${updated_json} = [{'id': 10305997, 'first_name': 'NewFirstName', 'middle_name': 'NewMiddleName', 'last_name': 'NewLastName', 'date_of_birth': '08/03/2005'}]</msg>
<var>${updated_json}</var>
<arg>${get_request_json}</arg>
<arg>$..data</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:25.620035" elapsed="0.008503"/>
</kw>
<kw name="Dictionaries Should Be Equal" owner="Collections">
<arg>${update_student_json}</arg>
<arg>${updated_json[0]}</arg>
<doc>Fails if the given dictionaries are not equal.</doc>
<status status="PASS" start="2024-08-13T13:38:25.628538" elapsed="0.001404"/>
</kw>
<kw name="test teardown" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:25.629942" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-08-13T13:38:25.629942" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:25.629942" elapsed="0.000000"/>
</kw>
<doc>Create a new student then update it</doc>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:24.581552" elapsed="1.049390"/>
</test>
<status status="PASS" start="2024-08-13T13:38:24.577529" elapsed="1.053413"/>
</suite>
<suite id="s1-s5" name="TC 005 Post With Simple Template" source="C:\Users\Vikto\source\repos\Robot Framework API Testing 2024\tests\TC_005_Post_With_Simple_Template.robot">
<kw name="test setup" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:25.635943" level="INFO">Creating Session using : alias=current_session, url=https://thetestingworldapi.com/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>current_session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-13T13:38:25.635943" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:25.635943" elapsed="0.000771"/>
</kw>
<test id="s1-s5-t1" name="Lower_case" line="11">
<kw name="Create New Student">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:25.637221" level="INFO">${dict} = {'first_name': 'aaa', 'middle_name': 'bbb', 'last_name': 'cccc', 'date_of_birth': '1/2/2000'}</msg>
<var>${dict}</var>
<arg>first_name=${first_name}</arg>
<arg>middle_name=${middle_name}</arg>
<arg>last_name=${last_name}</arg>
<arg>date_of_birth=${date_of_birth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:25.637221" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:26.145829" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '93'} 
 body=b'{"first_name": "aaa", "middle_name": "bbb", "last_name": "cccc", "date_of_birth": "1/2/2000"}' 
 </msg>
<msg time="2024-08-13T13:38:26.145829" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10305998', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:06 GMT', 'Content-Length': '100'} 
 body={"id":10305998,"first_name":"aaa","middle_name":"bbb","last_name":"cccc","date_of_birth":"1/2/2000"} 
 </msg>
<msg time="2024-08-13T13:38:26.145829" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:26.147496" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${dict}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:25.637221" elapsed="0.510275"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:26.148500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:26.147496" elapsed="0.001004"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:26.148500" level="INFO">${response_json} = {'id': 10305998, 'first_name': 'aaa', 'middle_name': 'bbb', 'last_name': 'cccc', 'date_of_birth': '1/2/2000'}</msg>
<var>${response_json}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:26.148500" elapsed="0.001073"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:26.157573" level="INFO">${response_first_name} = ['aaa']</msg>
<var>${response_first_name}</var>
<arg>${response_json}</arg>
<arg>$..first_name</arg>
<arg>fail_on_empty=${True}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:26.149573" elapsed="0.008000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_first_name[0]}</arg>
<arg>${first_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:26.157573" elapsed="0.000597"/>
</kw>
<arg>aaa</arg>
<arg>bbb</arg>
<arg>cccc</arg>
<arg>1/2/2000</arg>
<status status="PASS" start="2024-08-13T13:38:25.636714" elapsed="0.521456"/>
</kw>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:25.636714" elapsed="0.521456"/>
</test>
<test id="s1-s5-t2" name="Upper_Case" line="12">
<kw name="Create New Student">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:26.160197" level="INFO">${dict} = {'first_name': 'AAA', 'middle_name': 'BBB', 'last_name': 'CCC', 'date_of_birth': '1/2/2000'}</msg>
<var>${dict}</var>
<arg>first_name=${first_name}</arg>
<arg>middle_name=${middle_name}</arg>
<arg>last_name=${last_name}</arg>
<arg>date_of_birth=${date_of_birth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:26.160197" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:26.328796" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '92'} 
 body=b'{"first_name": "AAA", "middle_name": "BBB", "last_name": "CCC", "date_of_birth": "1/2/2000"}' 
 </msg>
<msg time="2024-08-13T13:38:26.328796" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10305999', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:06 GMT', 'Content-Length': '99'} 
 body={"id":10305999,"first_name":"AAA","middle_name":"BBB","last_name":"CCC","date_of_birth":"1/2/2000"} 
 </msg>
<msg time="2024-08-13T13:38:26.328796" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:26.328796" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${dict}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:26.160197" elapsed="0.168599"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:26.329833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:26.328796" elapsed="0.001037"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:26.330794" level="INFO">${response_json} = {'id': 10305999, 'first_name': 'AAA', 'middle_name': 'BBB', 'last_name': 'CCC', 'date_of_birth': '1/2/2000'}</msg>
<var>${response_json}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:26.329833" elapsed="0.000961"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:26.338500" level="INFO">${response_first_name} = ['AAA']</msg>
<var>${response_first_name}</var>
<arg>${response_json}</arg>
<arg>$..first_name</arg>
<arg>fail_on_empty=${True}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:26.330794" elapsed="0.007706"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_first_name[0]}</arg>
<arg>${first_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:26.339508" elapsed="0.000000"/>
</kw>
<arg>AAA</arg>
<arg>BBB</arg>
<arg>CCC</arg>
<arg>1/2/2000</arg>
<status status="PASS" start="2024-08-13T13:38:26.160197" elapsed="0.179311"/>
</kw>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:26.160197" elapsed="0.180339"/>
</test>
<test id="s1-s5-t3" name="White_Spaces" line="13">
<kw name="Create New Student">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:26.341535" level="INFO">${dict} = {'first_name': 'A A', 'middle_name': 'B B', 'last_name': 'C C', 'date_of_birth': '1/2/2000'}</msg>
<var>${dict}</var>
<arg>first_name=${first_name}</arg>
<arg>middle_name=${middle_name}</arg>
<arg>last_name=${last_name}</arg>
<arg>date_of_birth=${date_of_birth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:26.341535" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:26.511546" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '92'} 
 body=b'{"first_name": "A A", "middle_name": "B B", "last_name": "C C", "date_of_birth": "1/2/2000"}' 
 </msg>
<msg time="2024-08-13T13:38:26.511546" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10306000', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:06 GMT', 'Content-Length': '99'} 
 body={"id":10306000,"first_name":"A A","middle_name":"B B","last_name":"C C","date_of_birth":"1/2/2000"} 
 </msg>
<msg time="2024-08-13T13:38:26.512547" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:26.512547" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${dict}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:26.341535" elapsed="0.171012"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:26.513524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:26.512547" elapsed="0.000977"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:26.513524" level="INFO">${response_json} = {'id': 10306000, 'first_name': 'A A', 'middle_name': 'B B', 'last_name': 'C C', 'date_of_birth': '1/2/2000'}</msg>
<var>${response_json}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:26.513524" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:26.522030" level="INFO">${response_first_name} = ['A A']</msg>
<var>${response_first_name}</var>
<arg>${response_json}</arg>
<arg>$..first_name</arg>
<arg>fail_on_empty=${True}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:26.514579" elapsed="0.007451"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_first_name[0]}</arg>
<arg>${first_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:26.522030" elapsed="0.001345"/>
</kw>
<arg>A A</arg>
<arg>B B</arg>
<arg>C C</arg>
<arg>1/2/2000</arg>
<status status="PASS" start="2024-08-13T13:38:26.341535" elapsed="0.181840"/>
</kw>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:26.341535" elapsed="0.181840"/>
</test>
<test id="s1-s5-t4" name="Numbers" line="14">
<kw name="Create New Student">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:26.524384" level="INFO">${dict} = {'first_name': 'A12', 'middle_name': 'B34', 'last_name': 'C56', 'date_of_birth': '1/2/2000'}</msg>
<var>${dict}</var>
<arg>first_name=${first_name}</arg>
<arg>middle_name=${middle_name}</arg>
<arg>last_name=${last_name}</arg>
<arg>date_of_birth=${date_of_birth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:26.524384" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:26.691943" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '92'} 
 body=b'{"first_name": "A12", "middle_name": "B34", "last_name": "C56", "date_of_birth": "1/2/2000"}' 
 </msg>
<msg time="2024-08-13T13:38:26.691943" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10306001', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:06 GMT', 'Content-Length': '99'} 
 body={"id":10306001,"first_name":"A12","middle_name":"B34","last_name":"C56","date_of_birth":"1/2/2000"} 
 </msg>
<msg time="2024-08-13T13:38:26.691943" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:26.692964" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${dict}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:26.524384" elapsed="0.168580"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:26.693966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:26.692964" elapsed="0.001002"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:26.693966" level="INFO">${response_json} = {'id': 10306001, 'first_name': 'A12', 'middle_name': 'B34', 'last_name': 'C56', 'date_of_birth': '1/2/2000'}</msg>
<var>${response_json}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:26.693966" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:26.702673" level="INFO">${response_first_name} = ['A12']</msg>
<var>${response_first_name}</var>
<arg>${response_json}</arg>
<arg>$..first_name</arg>
<arg>fail_on_empty=${True}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:26.694967" elapsed="0.007706"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_first_name[0]}</arg>
<arg>${first_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:26.702673" elapsed="0.000937"/>
</kw>
<arg>A12</arg>
<arg>B34</arg>
<arg>C56</arg>
<arg>1/2/2000</arg>
<status status="PASS" start="2024-08-13T13:38:26.524384" elapsed="0.179226"/>
</kw>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:26.524384" elapsed="0.179226"/>
</test>
<test id="s1-s5-t5" name="Symbols1" line="15">
<kw name="Create New Student">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:26.704613" level="INFO">${dict} = {'first_name': '~!@', 'middle_name': '+$%', 'last_name': '^&amp;*', 'date_of_birth': None}</msg>
<var>${dict}</var>
<arg>first_name=${first_name}</arg>
<arg>middle_name=${middle_name}</arg>
<arg>last_name=${last_name}</arg>
<arg>date_of_birth=${date_of_birth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:26.704613" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:26.873708" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '86'} 
 body=b'{"first_name": "~!@", "middle_name": "+$%", "last_name": "^&amp;*", "date_of_birth": null}' 
 </msg>
<msg time="2024-08-13T13:38:26.873708" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10306002', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:06 GMT', 'Content-Length': '93'} 
 body={"id":10306002,"first_name":"~!@","middle_name":"+$%","last_name":"^&amp;*","date_of_birth":null} 
 </msg>
<msg time="2024-08-13T13:38:26.873708" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:26.873708" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${dict}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:26.704613" elapsed="0.169095"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:26.874739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:26.873708" elapsed="0.001031"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:26.874739" level="INFO">${response_json} = {'id': 10306002, 'first_name': '~!@', 'middle_name': '+$%', 'last_name': '^&amp;*', 'date_of_birth': None}</msg>
<var>${response_json}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:26.874739" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:26.883415" level="INFO">${response_first_name} = ['~!@']</msg>
<var>${response_first_name}</var>
<arg>${response_json}</arg>
<arg>$..first_name</arg>
<arg>fail_on_empty=${True}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:26.874739" elapsed="0.008676"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_first_name[0]}</arg>
<arg>${first_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:26.883415" elapsed="0.000955"/>
</kw>
<arg>~!@</arg>
<arg>+$%</arg>
<arg>^&amp;*</arg>
<arg>${null}</arg>
<status status="PASS" start="2024-08-13T13:38:26.704613" elapsed="0.179757"/>
</kw>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:26.704613" elapsed="0.179757"/>
</test>
<test id="s1-s5-t6" name="Symbols2" line="16">
<kw name="Create New Student">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:26.885367" level="INFO">${dict} = {'first_name': '.,;', 'middle_name': '=_?', 'last_name': '&lt;&gt;/', 'date_of_birth': ''}</msg>
<var>${dict}</var>
<arg>first_name=${first_name}</arg>
<arg>middle_name=${middle_name}</arg>
<arg>last_name=${last_name}</arg>
<arg>date_of_birth=${date_of_birth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:26.885367" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:27.056144" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '84'} 
 body=b'{"first_name": ".,;", "middle_name": "=_?", "last_name": "&lt;&gt;/", "date_of_birth": ""}' 
 </msg>
<msg time="2024-08-13T13:38:27.056144" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10306003', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:06 GMT', 'Content-Length': '91'} 
 body={"id":10306003,"first_name":".,;","middle_name":"=_?","last_name":"&lt;&gt;/","date_of_birth":""} 
 </msg>
<msg time="2024-08-13T13:38:27.056144" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:27.056144" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${dict}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:26.885367" elapsed="0.170777"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:27.057655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:27.056144" elapsed="0.001511"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:27.058698" level="INFO">${response_json} = {'id': 10306003, 'first_name': '.,;', 'middle_name': '=_?', 'last_name': '&lt;&gt;/', 'date_of_birth': ''}</msg>
<var>${response_json}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:27.057655" elapsed="0.001043"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:27.067584" level="INFO">${response_first_name} = ['.,;']</msg>
<var>${response_first_name}</var>
<arg>${response_json}</arg>
<arg>$..first_name</arg>
<arg>fail_on_empty=${True}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:27.058698" elapsed="0.008886"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_first_name[0]}</arg>
<arg>${first_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:27.067584" elapsed="0.001058"/>
</kw>
<arg>.,;</arg>
<arg>=_?</arg>
<arg>&lt;&gt;/</arg>
<arg>${EMPTY}</arg>
<status status="PASS" start="2024-08-13T13:38:26.885367" elapsed="0.183275"/>
</kw>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:26.884370" elapsed="0.184272"/>
</test>
<test id="s1-s5-t7" name="US_date" line="17">
<kw name="Create New Student">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:27.069865" level="INFO">${dict} = {'first_name': 'AAA', 'middle_name': 'BBB', 'last_name': 'CCC', 'date_of_birth': '12/31/1999'}</msg>
<var>${dict}</var>
<arg>first_name=${first_name}</arg>
<arg>middle_name=${middle_name}</arg>
<arg>last_name=${last_name}</arg>
<arg>date_of_birth=${date_of_birth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:27.069865" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:27.239268" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '94'} 
 body=b'{"first_name": "AAA", "middle_name": "BBB", "last_name": "CCC", "date_of_birth": "12/31/1999"}' 
 </msg>
<msg time="2024-08-13T13:38:27.239268" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10306004', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:07 GMT', 'Content-Length': '101'} 
 body={"id":10306004,"first_name":"AAA","middle_name":"BBB","last_name":"CCC","date_of_birth":"12/31/1999"} 
 </msg>
<msg time="2024-08-13T13:38:27.239268" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:27.240269" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${dict}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:27.071007" elapsed="0.169262"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:27.241298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:27.240269" elapsed="0.001029"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:27.241298" level="INFO">${response_json} = {'id': 10306004, 'first_name': 'AAA', 'middle_name': 'BBB', 'last_name': 'CCC', 'date_of_birth': '12/31/1999'}</msg>
<var>${response_json}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:27.241298" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:27.250282" level="INFO">${response_first_name} = ['AAA']</msg>
<var>${response_first_name}</var>
<arg>${response_json}</arg>
<arg>$..first_name</arg>
<arg>fail_on_empty=${True}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:27.241298" elapsed="0.008984"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_first_name[0]}</arg>
<arg>${first_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:27.250282" elapsed="0.000000"/>
</kw>
<arg>AAA</arg>
<arg>BBB</arg>
<arg>CCC</arg>
<arg>12/31/1999</arg>
<status status="PASS" start="2024-08-13T13:38:27.069865" elapsed="0.180417"/>
</kw>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:27.069865" elapsed="0.181515"/>
</test>
<test id="s1-s5-t8" name="EU_date" line="18">
<kw name="Create New Student">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:27.253493" level="INFO">${dict} = {'first_name': 'AAA', 'middle_name': 'BBB', 'last_name': 'CCC', 'date_of_birth': '31.12.1999'}</msg>
<var>${dict}</var>
<arg>first_name=${first_name}</arg>
<arg>middle_name=${middle_name}</arg>
<arg>last_name=${last_name}</arg>
<arg>date_of_birth=${date_of_birth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:27.252382" elapsed="0.001111"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:27.420029" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '94'} 
 body=b'{"first_name": "AAA", "middle_name": "BBB", "last_name": "CCC", "date_of_birth": "31.12.1999"}' 
 </msg>
<msg time="2024-08-13T13:38:27.420029" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10306005', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:07 GMT', 'Content-Length': '101'} 
 body={"id":10306005,"first_name":"AAA","middle_name":"BBB","last_name":"CCC","date_of_birth":"31.12.1999"} 
 </msg>
<msg time="2024-08-13T13:38:27.420029" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:27.421041" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${dict}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:27.253493" elapsed="0.167548"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:27.421041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:27.421041" elapsed="0.000000"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:27.422350" level="INFO">${response_json} = {'id': 10306005, 'first_name': 'AAA', 'middle_name': 'BBB', 'last_name': 'CCC', 'date_of_birth': '31.12.1999'}</msg>
<var>${response_json}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:27.421041" elapsed="0.001309"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:27.431946" level="INFO">${response_first_name} = ['AAA']</msg>
<var>${response_first_name}</var>
<arg>${response_json}</arg>
<arg>$..first_name</arg>
<arg>fail_on_empty=${True}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:27.422350" elapsed="0.009596"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_first_name[0]}</arg>
<arg>${first_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:27.431946" elapsed="0.000000"/>
</kw>
<arg>AAA</arg>
<arg>BBB</arg>
<arg>CCC</arg>
<arg>31.12.1999</arg>
<status status="PASS" start="2024-08-13T13:38:27.252382" elapsed="0.179564"/>
</kw>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:27.252382" elapsed="0.180753"/>
</test>
<test id="s1-s5-t9" name="Invalid_date" line="19">
<kw name="Create New Student">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:27.434193" level="INFO">${dict} = {'first_name': 'AAA', 'middle_name': 'BBB', 'last_name': 'CCC', 'date_of_birth': 'invalid_date'}</msg>
<var>${dict}</var>
<arg>first_name=${first_name}</arg>
<arg>middle_name=${middle_name}</arg>
<arg>last_name=${last_name}</arg>
<arg>date_of_birth=${date_of_birth}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:27.434193" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:27.613427" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '96'} 
 body=b'{"first_name": "AAA", "middle_name": "BBB", "last_name": "CCC", "date_of_birth": "invalid_date"}' 
 </msg>
<msg time="2024-08-13T13:38:27.613427" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10306006', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:07 GMT', 'Content-Length': '103'} 
 body={"id":10306006,"first_name":"AAA","middle_name":"BBB","last_name":"CCC","date_of_birth":"invalid_date"} 
 </msg>
<msg time="2024-08-13T13:38:27.614428" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:27.614428" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${dict}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:27.434193" elapsed="0.180235"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:27.615641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:27.614428" elapsed="0.001213"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:27.616653" level="INFO">${response_json} = {'id': 10306006, 'first_name': 'AAA', 'middle_name': 'BBB', 'last_name': 'CCC', 'date_of_birth': 'invalid_date'}</msg>
<var>${response_json}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:27.615641" elapsed="0.001012"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:27.624247" level="INFO">${response_first_name} = ['AAA']</msg>
<var>${response_first_name}</var>
<arg>${response_json}</arg>
<arg>$..first_name</arg>
<arg>fail_on_empty=${True}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:27.616653" elapsed="0.007594"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${response_first_name[0]}</arg>
<arg>${first_name}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-08-13T13:38:27.624247" elapsed="0.001000"/>
</kw>
<arg>AAA</arg>
<arg>BBB</arg>
<arg>CCC</arg>
<arg>invalid_date</arg>
<status status="PASS" start="2024-08-13T13:38:27.434193" elapsed="0.191054"/>
</kw>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:27.433135" elapsed="0.192112"/>
</test>
<kw name="test teardown" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:27.626247" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-08-13T13:38:27.626247" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:27.626247" elapsed="0.000000"/>
</kw>
<doc>Create a new student with the provided parameters</doc>
<status status="PASS" start="2024-08-13T13:38:25.631942" elapsed="1.994305"/>
</suite>
<suite id="s1-s6" name="TC 006 Post With Files As Template Argument" source="C:\Users\Vikto\source\repos\Robot Framework API Testing 2024\tests\TC_006_Post_With_Files_As_Template_Argument.robot">
<kw name="test setup" owner="common" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:27.633145" level="INFO">Creating Session using : alias=current_session, url=https://thetestingworldapi.com/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>current_session</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-13T13:38:27.633145" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:27.632146" elapsed="0.000999"/>
</kw>
<test id="s1-s6-t1" name="Lower_case" line="11">
<kw name="Create New Student">
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2024-08-13T13:38:27.634291" level="INFO">${json_sent} = {'first_name': 'FirstName', 'middle_name': 'MiddleName', 'last_name': 'LastName', 'date_of_birth': '12/11/2004'}</msg>
<var>${json_sent}</var>
<arg>C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/${data_file}</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2024-08-13T13:38:27.633145" elapsed="0.001146"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:28.331110" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '112'} 
 body=b'{"first_name": "FirstName", "middle_name": "MiddleName", "last_name": "LastName", "date_of_birth": "12/11/2004"}' 
 </msg>
<msg time="2024-08-13T13:38:28.331110" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10306007', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:08 GMT', 'Content-Length': '119'} 
 body={"id":10306007,"first_name":"FirstName","middle_name":"MiddleName","last_name":"LastName","date_of_birth":"12/11/2004"} 
 </msg>
<msg time="2024-08-13T13:38:28.331110" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:28.332124" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${json_sent}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:27.634291" elapsed="0.697833"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:28.333128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:28.332124" elapsed="0.001004"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:28.334134" level="INFO">${json_received} = {'id': 10306007, 'first_name': 'FirstName', 'middle_name': 'MiddleName', 'last_name': 'LastName', 'date_of_birth': '12/11/2004'}</msg>
<var>${json_received}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:28.333128" elapsed="0.001006"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\nJSON SENT:\n${json_sent}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:28.334134" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\nJSON RECEIVED:\n${json_received}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:28.334134" elapsed="0.001003"/>
</kw>
<kw name="List Should Contain Sub List" owner="Collections">
<arg>${json_received}</arg>
<arg>${json_sent}</arg>
<doc>Fails if not all elements in ``list2`` are found in ``list1``.</doc>
<status status="PASS" start="2024-08-13T13:38:28.335137" elapsed="0.000000"/>
</kw>
<arg>TC_002_Test_Data.json</arg>
<status status="PASS" start="2024-08-13T13:38:27.633145" elapsed="0.701992"/>
</kw>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:27.633145" elapsed="0.701992"/>
</test>
<test id="s1-s6-t2" name="Upper_Case" line="12">
<kw name="Create New Student">
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2024-08-13T13:38:28.336140" level="INFO">${json_sent} = {'first_name': 'FIRST_NAME', 'middle_name': 'MIDDLE_NAME', 'last_name': 'LAST_NAME', 'date_of_birth': '31.12.1999'}</msg>
<var>${json_sent}</var>
<arg>C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/${data_file}</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2024-08-13T13:38:28.336140" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:29.181187" level="INFO">POST Request : url=https://thetestingworldapi.com/api/studentsDetails 
 path_url=/api/studentsDetails 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '115'} 
 body=b'{"first_name": "FIRST_NAME", "middle_name": "MIDDLE_NAME", "last_name": "LAST_NAME", "date_of_birth": "31.12.1999"}' 
 </msg>
<msg time="2024-08-13T13:38:29.181187" level="INFO">POST Response : url=https://thetestingworldapi.com/api/studentsDetails 
 status=201, reason=Created 
 headers={'Cache-Control': 'no-cache', 'Pragma': 'no-cache', 'Content-Type': 'application/json; charset=utf-8', 'Expires': '-1', 'Location': 'https://thetestingworldapi.com/api/studentsDetails/10306008', 'Server': 'Microsoft-IIS/10.0', 'X-AspNet-Version': '4.0.30319', 'X-Powered-By': 'ASP.NET', 'X-Powered-By-Plesk': 'PleskWin', 'Date': 'Tue, 13 Aug 2024 11:38:08 GMT', 'Content-Length': '122'} 
 body={"id":10306008,"first_name":"FIRST_NAME","middle_name":"MIDDLE_NAME","last_name":"LAST_NAME","date_of_birth":"31.12.1999"} 
 </msg>
<msg time="2024-08-13T13:38:29.181187" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'thetestingworldapi.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:29.181187" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<var>${response}</var>
<arg>current_session</arg>
<arg>/api/studentsDetails</arg>
<arg>json=${json_sent}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:28.336140" elapsed="0.845047"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.182352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.status_code}</arg>
<arg>201</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:29.182352" elapsed="0.000000"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.183353" level="INFO">${json_received} = {'id': 10306008, 'first_name': 'FIRST_NAME', 'middle_name': 'MIDDLE_NAME', 'last_name': 'LAST_NAME', 'date_of_birth': '31.12.1999'}</msg>
<var>${json_received}</var>
<arg>${response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:29.182352" elapsed="0.001001"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\nJSON SENT:\n${json_sent}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.183353" elapsed="0.001370"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\nJSON RECEIVED:\n${json_received}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.184723" elapsed="0.001002"/>
</kw>
<kw name="List Should Contain Sub List" owner="Collections">
<arg>${json_received}</arg>
<arg>${json_sent}</arg>
<doc>Fails if not all elements in ``list2`` are found in ``list1``.</doc>
<status status="PASS" start="2024-08-13T13:38:29.185725" elapsed="0.000000"/>
</kw>
<arg>TC_003_Test_Data.json</arg>
<status status="PASS" start="2024-08-13T13:38:28.336140" elapsed="0.849585"/>
</kw>
<tag>api</tag>
<timeout value="15 seconds"/>
<status status="PASS" start="2024-08-13T13:38:28.336140" elapsed="0.849585"/>
</test>
<kw name="test teardown" owner="common" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:29.186725" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-08-13T13:38:29.186725" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.185725" elapsed="0.001000"/>
</kw>
<doc>Create a new student with the provided parameters</doc>
<status status="PASS" start="2024-08-13T13:38:27.627752" elapsed="1.558973"/>
</suite>
<suite id="s1-s7" name="TC 007 Process Complex Json" source="C:\Users\Vikto\source\repos\Robot Framework API Testing 2024\tests\TC_007_Process_Complex_Json.robot">
<test id="s1-s7-t1" name="Print Formatted Json" line="11">
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.193238" level="INFO">${json} = {'items': {'item': [{'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': '...</msg>
<var>${json}</var>
<arg>C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/Complex_Data.json</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2024-08-13T13:38:29.192235" elapsed="0.001003"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.202629" level="INFO">${dessertsArray} = [[{'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id'...</msg>
<var>${dessertsArray}</var>
<arg>${json}</arg>
<arg>$..items.item</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.193742" elapsed="0.008887"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.203629" level="INFO">@{desserts} = [ {'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id'...</msg>
<var>@{desserts}</var>
<arg>@{dessertsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.202629" elapsed="0.001000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.203629" level="INFO">Length is 6.</msg>
<msg time="2024-08-13T13:38:29.203629" level="INFO">${count} = 6</msg>
<var>${count}</var>
<arg>${desserts}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-08-13T13:38:29.203629" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>COUNT: ${count}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.204629" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nDESSERT</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.204629" elapsed="0.000000"/>
</kw>
<kw name="Validate Dessert Schema ${dessert}" source_name="Validate Dessert Schema ${dessert}">
<kw name="Validate Json By Schema File" owner="JSONLibrary">
<arg>json_object=${dessert}</arg>
<arg>path_to_schema=C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/dessert_schema.json</arg>
<doc>Validate json object by json schema file.
Arguments:
    - json_object: json as a dictionary object.
    - json_path: path to file with json schema</doc>
<status status="PASS" start="2024-08-13T13:38:29.205628" elapsed="0.002534"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.205628" elapsed="0.002534"/>
</kw>
<kw name="Print Dessert ${dessert}" source_name="Print Dessert ${dessert}">
<kw name="Get Dessert Info As Array ${dessert}" source_name="Get Dessert Info As Array ${dessert}">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.208162" level="INFO">@{info} = [ ]</msg>
<var>@{info}</var>
<arg>${null}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.208162" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.216579" level="INFO">${id} = ['0001']</msg>
<var>${id}</var>
<arg>${dessert}</arg>
<arg>id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.208162" elapsed="0.008417"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.225733" level="INFO">${type} = ['donut']</msg>
<var>${type}</var>
<arg>${dessert}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.216579" elapsed="0.009154"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.234147" level="INFO">${name} = ['Cake']</msg>
<var>${name}</var>
<arg>${dessert}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.225733" elapsed="0.008414"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.243189" level="INFO">${ppu} = [0.55]</msg>
<var>${ppu}</var>
<arg>${dessert}</arg>
<arg>ppu</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.234147" elapsed="0.009042"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.244189" level="INFO">@{info} = [ 0001 | donut | Cake | 0.55 ]</msg>
<var>@{info}</var>
<arg>${id[0]}</arg>
<arg>${type[0]}</arg>
<arg>${name[0]}</arg>
<arg>${ppu[0]}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-08-13T13:38:29.243189" elapsed="0.001000"/>
</kw>
<return>
<value>@{info}</value>
<status status="PASS" start="2024-08-13T13:38:29.244189" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.244189" level="INFO">@{dessertInfo} = [ 0001 | donut | Cake | 0.55 ]</msg>
<var>@{dessertInfo}</var>
<status status="PASS" start="2024-08-13T13:38:29.208162" elapsed="0.036027"/>
</kw>
<kw name="Get Batters As Array ${dessert}" source_name="Get Batters As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.252848" level="INFO">@{battersArray} = [ [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id': '1004', 'type': "Devil's Food"}] ]</msg>
<var>@{battersArray}</var>
<arg>${dessert}</arg>
<arg>$..batters.batter</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.244189" elapsed="0.008659"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.252848" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.252848" level="FAIL">'[[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id': '1004', 'type': "Devil's Food"}]]' should be empty.</msg>
<arg>${battersArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.252848" elapsed="0.000000">'[[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id': '1004', 'type': "Devil's Food"}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.252848" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${battersArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.252848" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.252848" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.252848" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.252848" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.253847" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} | {'id': '1002', 'type': 'Chocolate'} | {'id': '1003', 'type': 'Blueberry'} | {'id': '1004', 'type': "Devil's Food"} ]</msg>
<var>@{batters}</var>
<arg>${battersArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.252848" elapsed="0.000999"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.253847" level="INFO">Length is 4.</msg>
<msg time="2024-08-13T13:38:29.253847" level="FAIL">'[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id': '1004', 'type': "Devil's Food"}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.253847" elapsed="0.000000">'[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id': '1004', 'type': "Devil's Food"}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.253847" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.253847" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.253847" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.253847" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.253847" elapsed="0.000000"/>
</if>
<return>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.253847" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.253847" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} | {'id': '1002', 'type': 'Chocolate'} | {'id': '1003', 'type': 'Blueberry'} | {'id': '1004', 'type': "Devil's Food"} ]</msg>
<var>@{batters}</var>
<status status="PASS" start="2024-08-13T13:38:29.244189" elapsed="0.009658"/>
</kw>
<kw name="Get Toppings As Array ${dessert}" source_name="Get Toppings As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.262389" level="INFO">@{toppingsArray} = [ [{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5006', 'type': 'Chocolate with Sprinkles'}, {'id...</msg>
<var>@{toppingsArray}</var>
<arg>${dessert}</arg>
<arg>$..topping</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.254847" elapsed="0.007542"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.262389" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.263388" level="FAIL">'[[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5006', 'type': 'Chocolate with Sprinkles'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]]' should be empty.</msg>
<arg>${toppingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.262389" elapsed="0.000999">'[[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5006', 'type': 'Chocolate with Sprinkles'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.263388" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.262389" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.263388" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.263388" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.263388" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.263388" level="INFO">@{toppings} = [ {'id': '5001', 'type': 'None'} | {'id': '5002', 'type': 'Glazed'} | {'id': '5005', 'type': 'Sugar'} | {'id': '5007', 'type': 'Powdered Sugar'} | {'id': '5006', 'type': 'Chocolate with Sprinkles'} | ...</msg>
<var>@{toppings}</var>
<arg>@{toppingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.263388" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.263388" level="INFO">Length is 7.</msg>
<msg time="2024-08-13T13:38:29.263388" level="FAIL">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5006', 'type': 'Chocolate with Sprinkles'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.263388" elapsed="0.000000">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5006', 'type': 'Chocolate with Sprinkles'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.263388" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.263388" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.264389" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.263388" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.263388" elapsed="0.001001"/>
</if>
<return>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.264389" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.264389" level="INFO">@{toppings} = [ {'id': '5001', 'type': 'None'} | {'id': '5002', 'type': 'Glazed'} | {'id': '5005', 'type': 'Sugar'} | {'id': '5007', 'type': 'Powdered Sugar'} | {'id': '5006', 'type': 'Chocolate with Sprinkles'} | ...</msg>
<var>@{toppings}</var>
<status status="PASS" start="2024-08-13T13:38:29.254847" elapsed="0.009542"/>
</kw>
<kw name="Get Fillings As Arary ${dessert}" source_name="Get Fillings As Arary ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.271739" level="INFO">@{fillingsArray} = [ ]</msg>
<var>@{fillingsArray}</var>
<arg>${dessert}</arg>
<arg>$..fillings.filling</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.264389" elapsed="0.007350"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.272739" level="INFO">Length is 0.</msg>
<arg>${fillingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-08-13T13:38:29.272739" elapsed="0.000000"/>
</kw>
<msg time="2024-08-13T13:38:29.272739" level="INFO">${isEmpty} = True</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.272739" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="PASS" start="2024-08-13T13:38:29.272739" elapsed="0.000000"/>
</return>
<status status="PASS" start="2024-08-13T13:38:29.272739" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.272739" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<var>@{fillings}</var>
<arg>@{fillingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.272739" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.272739" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.272739" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.272739" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-08-13T13:38:29.272739" elapsed="0.000000"/>
</if>
<return>
<value>@{fillings}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.272739" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.272739" level="INFO">@{fillings} = [ ]</msg>
<var>@{fillings}</var>
<status status="PASS" start="2024-08-13T13:38:29.264389" elapsed="0.008350"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${dessertInfo}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.272739" elapsed="0.001003"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== BATTERS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.273742" elapsed="0.000000"/>
</kw>
<kw name="Print Batter Types ${batters}" source_name="Print Batter Types ${batters}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.274731" level="INFO">Length is 4.</msg>
<msg time="2024-08-13T13:38:29.274731" level="FAIL">'[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id': '1004', 'type': "Devil's Food"}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.274731" elapsed="0.000000">'[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id': '1004', 'type': "Devil's Food"}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.274731" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.273742" elapsed="0.000989"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.274731" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.274731" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.274731" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.282312" level="INFO">${type} = ['Regular']</msg>
<var>${type}</var>
<arg>${batter}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.274731" elapsed="0.007581"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.283303" elapsed="0.000000"/>
</kw>
<var name="${batter}">{'id': '1001', 'type': 'Regular'}</var>
<status status="PASS" start="2024-08-13T13:38:29.274731" elapsed="0.008572"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.291958" level="INFO">${type} = ['Chocolate']</msg>
<var>${type}</var>
<arg>${batter}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.283303" elapsed="0.008655"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.291958" elapsed="0.000000"/>
</kw>
<var name="${batter}">{'id': '1002', 'type': 'Chocolate'}</var>
<status status="PASS" start="2024-08-13T13:38:29.283303" elapsed="0.008655"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.300074" level="INFO">${type} = ['Blueberry']</msg>
<var>${type}</var>
<arg>${batter}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.291958" elapsed="0.008116"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.300074" elapsed="0.000000"/>
</kw>
<var name="${batter}">{'id': '1003', 'type': 'Blueberry'}</var>
<status status="PASS" start="2024-08-13T13:38:29.291958" elapsed="0.008116"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.308655" level="INFO">${type} = ["Devil's Food"]</msg>
<var>${type}</var>
<arg>${batter}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.300074" elapsed="0.008581"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.308655" elapsed="0.001040"/>
</kw>
<var name="${batter}">{'id': '1004', 'type': "Devil's Food"}</var>
<status status="PASS" start="2024-08-13T13:38:29.300074" elapsed="0.009621"/>
</iter>
<var>${batter}</var>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.274731" elapsed="0.034964"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.273742" elapsed="0.035953"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== TOPPINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.309695" elapsed="0.000000"/>
</kw>
<kw name="Print Topping Types ${toppings}" source_name="Print Topping Types ${toppings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.310701" level="INFO">Length is 7.</msg>
<msg time="2024-08-13T13:38:29.310701" level="FAIL">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5006', 'type': 'Chocolate with Sprinkles'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.310701" elapsed="0.000000">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5006', 'type': 'Chocolate with Sprinkles'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.310701" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.310701" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.310701" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.310701" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.310701" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.320207" level="INFO">${type} = ['None']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.310701" elapsed="0.009506"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.320207" elapsed="0.000000"/>
</kw>
<var name="${topping}">{'id': '5001', 'type': 'None'}</var>
<status status="PASS" start="2024-08-13T13:38:29.310701" elapsed="0.009506"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.329516" level="INFO">${type} = ['Glazed']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.321208" elapsed="0.008308"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.329516" elapsed="0.000713"/>
</kw>
<var name="${topping}">{'id': '5002', 'type': 'Glazed'}</var>
<status status="PASS" start="2024-08-13T13:38:29.320207" elapsed="0.010022"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.339194" level="INFO">${type} = ['Sugar']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.330229" elapsed="0.008965"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.339194" elapsed="0.001001"/>
</kw>
<var name="${topping}">{'id': '5005', 'type': 'Sugar'}</var>
<status status="PASS" start="2024-08-13T13:38:29.330229" elapsed="0.009966"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.347761" level="INFO">${type} = ['Powdered Sugar']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.340195" elapsed="0.007566"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.347761" elapsed="0.001458"/>
</kw>
<var name="${topping}">{'id': '5007', 'type': 'Powdered Sugar'}</var>
<status status="PASS" start="2024-08-13T13:38:29.340195" elapsed="0.009024"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.357765" level="INFO">${type} = ['Chocolate with Sprinkles']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.349219" elapsed="0.008546"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.357765" elapsed="0.000000"/>
</kw>
<var name="${topping}">{'id': '5006', 'type': 'Chocolate with Sprinkles'}</var>
<status status="PASS" start="2024-08-13T13:38:29.349219" elapsed="0.008546"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.365882" level="INFO">${type} = ['Chocolate']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.358872" elapsed="0.007010"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.365882" elapsed="0.001511"/>
</kw>
<var name="${topping}">{'id': '5003', 'type': 'Chocolate'}</var>
<status status="PASS" start="2024-08-13T13:38:29.358872" elapsed="0.008521"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.390755" level="INFO">${type} = ['Maple']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.367393" elapsed="0.023362"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.390755" elapsed="0.001000"/>
</kw>
<var name="${topping}">{'id': '5004', 'type': 'Maple'}</var>
<status status="PASS" start="2024-08-13T13:38:29.367393" elapsed="0.024362"/>
</iter>
<var>${topping}</var>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.310701" elapsed="0.081054"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.310701" elapsed="0.081054"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== FILLINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.391755" elapsed="0.000000"/>
</kw>
<kw name="Print Filling Names ${fillings}" source_name="Print Filling Names ${fillings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.392755" level="INFO">Length is 0.</msg>
<arg>${fillings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-08-13T13:38:29.392755" elapsed="0.000000"/>
</kw>
<msg time="2024-08-13T13:38:29.392755" level="INFO">${isEmpty} = True</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.392755" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="PASS" start="2024-08-13T13:38:29.392755" elapsed="0.001000"/>
</return>
<status status="PASS" start="2024-08-13T13:38:29.392755" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.392755" elapsed="0.001000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${type}</var>
<arg>${filling}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.393755" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.393755" elapsed="0.000000"/>
</kw>
<var name="${filling}"/>
<status status="NOT RUN" start="2024-08-13T13:38:29.393755" elapsed="0.000000"/>
</iter>
<var>${filling}</var>
<value>@{fillings}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.393755" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.392755" elapsed="0.001506"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.208162" elapsed="0.186099"/>
</kw>
<var name="${dessert}">{'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id': ...</var>
<status status="PASS" start="2024-08-13T13:38:29.204629" elapsed="0.189632"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nDESSERT</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.394261" elapsed="0.000000"/>
</kw>
<kw name="Validate Dessert Schema ${dessert}" source_name="Validate Dessert Schema ${dessert}">
<kw name="Validate Json By Schema File" owner="JSONLibrary">
<arg>json_object=${dessert}</arg>
<arg>path_to_schema=C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/dessert_schema.json</arg>
<doc>Validate json object by json schema file.
Arguments:
    - json_object: json as a dictionary object.
    - json_path: path to file with json schema</doc>
<status status="PASS" start="2024-08-13T13:38:29.395263" elapsed="0.002504"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.394261" elapsed="0.003506"/>
</kw>
<kw name="Print Dessert ${dessert}" source_name="Print Dessert ${dessert}">
<kw name="Get Dessert Info As Array ${dessert}" source_name="Get Dessert Info As Array ${dessert}">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.397913" level="INFO">@{info} = [ ]</msg>
<var>@{info}</var>
<arg>${null}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.397913" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.405972" level="INFO">${id} = ['0002']</msg>
<var>${id}</var>
<arg>${dessert}</arg>
<arg>id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.397913" elapsed="0.008059"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.414604" level="INFO">${type} = ['donut']</msg>
<var>${type}</var>
<arg>${dessert}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.405972" elapsed="0.008632"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.422132" level="INFO">${name} = ['Raised']</msg>
<var>${name}</var>
<arg>${dessert}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.414604" elapsed="0.007528"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.429714" level="INFO">${ppu} = [0.55]</msg>
<var>${ppu}</var>
<arg>${dessert}</arg>
<arg>ppu</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.423133" elapsed="0.006581"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.430728" level="INFO">@{info} = [ 0002 | donut | Raised | 0.55 ]</msg>
<var>@{info}</var>
<arg>${id[0]}</arg>
<arg>${type[0]}</arg>
<arg>${name[0]}</arg>
<arg>${ppu[0]}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-08-13T13:38:29.429714" elapsed="0.001014"/>
</kw>
<return>
<value>@{info}</value>
<status status="PASS" start="2024-08-13T13:38:29.430728" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.430728" level="INFO">@{dessertInfo} = [ 0002 | donut | Raised | 0.55 ]</msg>
<var>@{dessertInfo}</var>
<status status="PASS" start="2024-08-13T13:38:29.397913" elapsed="0.032815"/>
</kw>
<kw name="Get Batters As Array ${dessert}" source_name="Get Batters As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.439263" level="INFO">@{battersArray} = [ [{'id': '1001', 'type': 'Regular'}] ]</msg>
<var>@{battersArray}</var>
<arg>${dessert}</arg>
<arg>$..batters.batter</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.431728" elapsed="0.007535"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.440264" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.440264" level="FAIL">'[[{'id': '1001', 'type': 'Regular'}]]' should be empty.</msg>
<arg>${battersArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.440264" elapsed="0.000000">'[[{'id': '1001', 'type': 'Regular'}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.440264" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${battersArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.439263" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.440264" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.440264" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.440264" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.440264" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} ]</msg>
<var>@{batters}</var>
<arg>${battersArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.440264" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.441264" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.441264" level="FAIL">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.441264" elapsed="0.000000">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.441264" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.440264" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.441264" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.441264" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.441264" elapsed="0.000000"/>
</if>
<return>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.441264" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.441264" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} ]</msg>
<var>@{batters}</var>
<status status="PASS" start="2024-08-13T13:38:29.431728" elapsed="0.009536"/>
</kw>
<kw name="Get Toppings As Array ${dessert}" source_name="Get Toppings As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.448770" level="INFO">@{toppingsArray} = [ [{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}] ]</msg>
<var>@{toppingsArray}</var>
<arg>${dessert}</arg>
<arg>$..topping</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.441264" elapsed="0.007506"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.449771" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.449771" level="FAIL">'[[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]]' should be empty.</msg>
<arg>${toppingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.449771" elapsed="0.000000">'[[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.449771" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.449771" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.449771" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.449771" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.449771" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.449771" level="INFO">@{toppings} = [ {'id': '5001', 'type': 'None'} | {'id': '5002', 'type': 'Glazed'} | {'id': '5005', 'type': 'Sugar'} | {'id': '5003', 'type': 'Chocolate'} | {'id': '5004', 'type': 'Maple'} ]</msg>
<var>@{toppings}</var>
<arg>@{toppingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.449771" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.450772" level="INFO">Length is 5.</msg>
<msg time="2024-08-13T13:38:29.450772" level="FAIL">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.449771" elapsed="0.001001">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.450772" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.449771" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.450772" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.450772" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.450772" elapsed="0.000000"/>
</if>
<return>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.450772" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.450772" level="INFO">@{toppings} = [ {'id': '5001', 'type': 'None'} | {'id': '5002', 'type': 'Glazed'} | {'id': '5005', 'type': 'Sugar'} | {'id': '5003', 'type': 'Chocolate'} | {'id': '5004', 'type': 'Maple'} ]</msg>
<var>@{toppings}</var>
<status status="PASS" start="2024-08-13T13:38:29.441264" elapsed="0.009508"/>
</kw>
<kw name="Get Fillings As Arary ${dessert}" source_name="Get Fillings As Arary ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.458443" level="INFO">@{fillingsArray} = [ ]</msg>
<var>@{fillingsArray}</var>
<arg>${dessert}</arg>
<arg>$..fillings.filling</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.450772" elapsed="0.007671"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.458443" level="INFO">Length is 0.</msg>
<arg>${fillingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-08-13T13:38:29.458443" elapsed="0.000000"/>
</kw>
<msg time="2024-08-13T13:38:29.459889" level="INFO">${isEmpty} = True</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.458443" elapsed="0.001446"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="PASS" start="2024-08-13T13:38:29.459889" elapsed="0.000000"/>
</return>
<status status="PASS" start="2024-08-13T13:38:29.459889" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.459889" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<var>@{fillings}</var>
<arg>@{fillingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.459889" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.459889" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.459889" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.459889" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-08-13T13:38:29.459889" elapsed="0.000000"/>
</if>
<return>
<value>@{fillings}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.459889" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.459889" level="INFO">@{fillings} = [ ]</msg>
<var>@{fillings}</var>
<status status="PASS" start="2024-08-13T13:38:29.450772" elapsed="0.009117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${dessertInfo}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.459889" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== BATTERS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.460877" elapsed="0.000000"/>
</kw>
<kw name="Print Batter Types ${batters}" source_name="Print Batter Types ${batters}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.460877" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.460877" level="FAIL">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.460877" elapsed="0.000000">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.460877" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.460877" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.460877" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.460877" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.460877" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.469481" level="INFO">${type} = ['Regular']</msg>
<var>${type}</var>
<arg>${batter}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.461885" elapsed="0.007596"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.469481" elapsed="0.001015"/>
</kw>
<var name="${batter}">{'id': '1001', 'type': 'Regular'}</var>
<status status="PASS" start="2024-08-13T13:38:29.461885" elapsed="0.008611"/>
</iter>
<var>${batter}</var>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.460877" elapsed="0.009619"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.460877" elapsed="0.009619"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== TOPPINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.470496" elapsed="0.000000"/>
</kw>
<kw name="Print Topping Types ${toppings}" source_name="Print Topping Types ${toppings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.471487" level="INFO">Length is 5.</msg>
<msg time="2024-08-13T13:38:29.471487" level="FAIL">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.471487" elapsed="0.000000">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.471487" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.471487" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.471487" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.471487" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.471487" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.479902" level="INFO">${type} = ['None']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.471487" elapsed="0.008415"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.479902" elapsed="0.000000"/>
</kw>
<var name="${topping}">{'id': '5001', 'type': 'None'}</var>
<status status="PASS" start="2024-08-13T13:38:29.471487" elapsed="0.009417"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.489919" level="INFO">${type} = ['Glazed']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.480904" elapsed="0.009015"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.489919" elapsed="0.000863"/>
</kw>
<var name="${topping}">{'id': '5002', 'type': 'Glazed'}</var>
<status status="PASS" start="2024-08-13T13:38:29.480904" elapsed="0.009878"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.498871" level="INFO">${type} = ['Sugar']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.490782" elapsed="0.008089"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.498871" elapsed="0.000997"/>
</kw>
<var name="${topping}">{'id': '5005', 'type': 'Sugar'}</var>
<status status="PASS" start="2024-08-13T13:38:29.490782" elapsed="0.009086"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.508396" level="INFO">${type} = ['Chocolate']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.499868" elapsed="0.008528"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.508396" elapsed="0.000000"/>
</kw>
<var name="${topping}">{'id': '5003', 'type': 'Chocolate'}</var>
<status status="PASS" start="2024-08-13T13:38:29.499868" elapsed="0.008528"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.518294" level="INFO">${type} = ['Maple']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.509779" elapsed="0.008515"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.518294" elapsed="0.000000"/>
</kw>
<var name="${topping}">{'id': '5004', 'type': 'Maple'}</var>
<status status="PASS" start="2024-08-13T13:38:29.509779" elapsed="0.008515"/>
</iter>
<var>${topping}</var>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.471487" elapsed="0.046807"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.470496" elapsed="0.047798"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== FILLINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.518294" elapsed="0.001070"/>
</kw>
<kw name="Print Filling Names ${fillings}" source_name="Print Filling Names ${fillings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.519364" level="INFO">Length is 0.</msg>
<arg>${fillings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-08-13T13:38:29.519364" elapsed="0.000000"/>
</kw>
<msg time="2024-08-13T13:38:29.520367" level="INFO">${isEmpty} = True</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.519364" elapsed="0.001003"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="PASS" start="2024-08-13T13:38:29.520367" elapsed="0.000000"/>
</return>
<status status="PASS" start="2024-08-13T13:38:29.520367" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.520367" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${type}</var>
<arg>${filling}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.520367" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.520367" elapsed="0.000000"/>
</kw>
<var name="${filling}"/>
<status status="NOT RUN" start="2024-08-13T13:38:29.520367" elapsed="0.000000"/>
</iter>
<var>${filling}</var>
<value>@{fillings}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.520367" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.519364" elapsed="0.001003"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.397913" elapsed="0.122454"/>
</kw>
<var name="${dessert}">{'id': '0002', 'type': 'donut', 'name': 'Raised', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}]}, 'topping': [{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'},...</var>
<status status="PASS" start="2024-08-13T13:38:29.394261" elapsed="0.126106"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nDESSERT</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.520367" elapsed="0.000000"/>
</kw>
<kw name="Validate Dessert Schema ${dessert}" source_name="Validate Dessert Schema ${dessert}">
<kw name="Validate Json By Schema File" owner="JSONLibrary">
<arg>json_object=${dessert}</arg>
<arg>path_to_schema=C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/dessert_schema.json</arg>
<doc>Validate json object by json schema file.
Arguments:
    - json_object: json as a dictionary object.
    - json_path: path to file with json schema</doc>
<status status="PASS" start="2024-08-13T13:38:29.521366" elapsed="0.002000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.521366" elapsed="0.002000"/>
</kw>
<kw name="Print Dessert ${dessert}" source_name="Print Dessert ${dessert}">
<kw name="Get Dessert Info As Array ${dessert}" source_name="Get Dessert Info As Array ${dessert}">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.523366" level="INFO">@{info} = [ ]</msg>
<var>@{info}</var>
<arg>${null}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.523366" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.532372" level="INFO">${id} = ['0003']</msg>
<var>${id}</var>
<arg>${dessert}</arg>
<arg>id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.524366" elapsed="0.008006"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.541245" level="INFO">${type} = ['donut']</msg>
<var>${type}</var>
<arg>${dessert}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.533333" elapsed="0.007912"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.548850" level="INFO">${name} = ['Old Fashioned']</msg>
<var>${name}</var>
<arg>${dessert}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.541245" elapsed="0.007605"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.557511" level="INFO">${ppu} = [0.55]</msg>
<var>${ppu}</var>
<arg>${dessert}</arg>
<arg>ppu</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.548850" elapsed="0.008661"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.558513" level="INFO">@{info} = [ 0003 | donut | Old Fashioned | 0.55 ]</msg>
<var>@{info}</var>
<arg>${id[0]}</arg>
<arg>${type[0]}</arg>
<arg>${name[0]}</arg>
<arg>${ppu[0]}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-08-13T13:38:29.557511" elapsed="0.001002"/>
</kw>
<return>
<value>@{info}</value>
<status status="PASS" start="2024-08-13T13:38:29.558513" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.558513" level="INFO">@{dessertInfo} = [ 0003 | donut | Old Fashioned | 0.55 ]</msg>
<var>@{dessertInfo}</var>
<status status="PASS" start="2024-08-13T13:38:29.523366" elapsed="0.035147"/>
</kw>
<kw name="Get Batters As Array ${dessert}" source_name="Get Batters As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.568037" level="INFO">@{battersArray} = [ [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}] ]</msg>
<var>@{battersArray}</var>
<arg>${dessert}</arg>
<arg>$..batters.batter</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.559529" elapsed="0.008508"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.568037" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.568037" level="FAIL">'[[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}]]' should be empty.</msg>
<arg>${battersArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.568037" elapsed="0.000000">'[[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.568037" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${battersArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.568037" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.569261" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.568037" elapsed="0.001224"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.568037" elapsed="0.001224"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.569261" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} | {'id': '1002', 'type': 'Chocolate'} ]</msg>
<var>@{batters}</var>
<arg>${battersArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.569261" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.569261" level="INFO">Length is 2.</msg>
<msg time="2024-08-13T13:38:29.569261" level="FAIL">'[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.569261" elapsed="0.000000">'[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.569261" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.569261" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.569261" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.569261" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.569261" elapsed="0.001002"/>
</if>
<return>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.570263" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.570263" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} | {'id': '1002', 'type': 'Chocolate'} ]</msg>
<var>@{batters}</var>
<status status="PASS" start="2024-08-13T13:38:29.559529" elapsed="0.010734"/>
</kw>
<kw name="Get Toppings As Array ${dessert}" source_name="Get Toppings As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.577386" level="INFO">@{toppingsArray} = [ [{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}] ]</msg>
<var>@{toppingsArray}</var>
<arg>${dessert}</arg>
<arg>$..topping</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.570263" elapsed="0.007123"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.577386" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.577386" level="FAIL">'[[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]]' should be empty.</msg>
<arg>${toppingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.577386" elapsed="0.000000">'[[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.578705" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.577386" elapsed="0.001319"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.578705" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.578705" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.578705" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.578705" level="INFO">@{toppings} = [ {'id': '5001', 'type': 'None'} | {'id': '5002', 'type': 'Glazed'} | {'id': '5003', 'type': 'Chocolate'} | {'id': '5004', 'type': 'Maple'} ]</msg>
<var>@{toppings}</var>
<arg>@{toppingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.578705" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.578705" level="INFO">Length is 4.</msg>
<msg time="2024-08-13T13:38:29.578705" level="FAIL">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.578705" elapsed="0.000000">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.578705" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.578705" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.578705" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.578705" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.578705" elapsed="0.000000"/>
</if>
<return>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.578705" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.578705" level="INFO">@{toppings} = [ {'id': '5001', 'type': 'None'} | {'id': '5002', 'type': 'Glazed'} | {'id': '5003', 'type': 'Chocolate'} | {'id': '5004', 'type': 'Maple'} ]</msg>
<var>@{toppings}</var>
<status status="PASS" start="2024-08-13T13:38:29.570263" elapsed="0.008442"/>
</kw>
<kw name="Get Fillings As Arary ${dessert}" source_name="Get Fillings As Arary ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.587453" level="INFO">@{fillingsArray} = [ ]</msg>
<var>@{fillingsArray}</var>
<arg>${dessert}</arg>
<arg>$..fillings.filling</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.579980" elapsed="0.007473"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.588539" level="INFO">Length is 0.</msg>
<arg>${fillingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-08-13T13:38:29.588539" elapsed="0.000000"/>
</kw>
<msg time="2024-08-13T13:38:29.588539" level="INFO">${isEmpty} = True</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.587453" elapsed="0.001086"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="PASS" start="2024-08-13T13:38:29.588539" elapsed="0.000000"/>
</return>
<status status="PASS" start="2024-08-13T13:38:29.588539" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.588539" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<var>@{fillings}</var>
<arg>@{fillingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.588539" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.588539" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.588539" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.588539" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-08-13T13:38:29.588539" elapsed="0.000000"/>
</if>
<return>
<value>@{fillings}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.588539" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.588539" level="INFO">@{fillings} = [ ]</msg>
<var>@{fillings}</var>
<status status="PASS" start="2024-08-13T13:38:29.578705" elapsed="0.009834"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${dessertInfo}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.588539" elapsed="0.000826"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== BATTERS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.589365" elapsed="0.000000"/>
</kw>
<kw name="Print Batter Types ${batters}" source_name="Print Batter Types ${batters}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.590380" level="INFO">Length is 2.</msg>
<msg time="2024-08-13T13:38:29.590380" level="FAIL">'[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.589365" elapsed="0.001015">'[{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.590380" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.589365" elapsed="0.001015"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.590380" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.590380" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.590380" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.597479" level="INFO">${type} = ['Regular']</msg>
<var>${type}</var>
<arg>${batter}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.590380" elapsed="0.007099"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.597479" elapsed="0.001051"/>
</kw>
<var name="${batter}">{'id': '1001', 'type': 'Regular'}</var>
<status status="PASS" start="2024-08-13T13:38:29.590380" elapsed="0.008150"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.607472" level="INFO">${type} = ['Chocolate']</msg>
<var>${type}</var>
<arg>${batter}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.598530" elapsed="0.008942"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.607472" elapsed="0.001010"/>
</kw>
<var name="${batter}">{'id': '1002', 'type': 'Chocolate'}</var>
<status status="PASS" start="2024-08-13T13:38:29.598530" elapsed="0.009952"/>
</iter>
<var>${batter}</var>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.590380" elapsed="0.018102"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.589365" elapsed="0.019117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== TOPPINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.608482" elapsed="0.000000"/>
</kw>
<kw name="Print Topping Types ${toppings}" source_name="Print Topping Types ${toppings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.609922" level="INFO">Length is 4.</msg>
<msg time="2024-08-13T13:38:29.609922" level="FAIL">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.609922" elapsed="0.000000">'[{'id': '5001', 'type': 'None'}, {'id': '5002', 'type': 'Glazed'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.609922" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.609922" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.609922" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.609922" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.609922" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.619595" level="INFO">${type} = ['None']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.609922" elapsed="0.009673"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.619595" elapsed="0.000836"/>
</kw>
<var name="${topping}">{'id': '5001', 'type': 'None'}</var>
<status status="PASS" start="2024-08-13T13:38:29.609922" elapsed="0.010509"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.627970" level="INFO">${type} = ['Glazed']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.620431" elapsed="0.007539"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.627970" elapsed="0.000694"/>
</kw>
<var name="${topping}">{'id': '5002', 'type': 'Glazed'}</var>
<status status="PASS" start="2024-08-13T13:38:29.620431" elapsed="0.008233"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.636067" level="INFO">${type} = ['Chocolate']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.628664" elapsed="0.007403"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.636067" elapsed="0.001519"/>
</kw>
<var name="${topping}">{'id': '5003', 'type': 'Chocolate'}</var>
<status status="PASS" start="2024-08-13T13:38:29.628664" elapsed="0.008922"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.645640" level="INFO">${type} = ['Maple']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.637586" elapsed="0.008054"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.645640" elapsed="0.001008"/>
</kw>
<var name="${topping}">{'id': '5004', 'type': 'Maple'}</var>
<status status="PASS" start="2024-08-13T13:38:29.637586" elapsed="0.009062"/>
</iter>
<var>${topping}</var>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.609922" elapsed="0.036726"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.608482" elapsed="0.038166"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== FILLINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.646648" elapsed="0.000992"/>
</kw>
<kw name="Print Filling Names ${fillings}" source_name="Print Filling Names ${fillings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.647640" level="INFO">Length is 0.</msg>
<arg>${fillings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-08-13T13:38:29.647640" elapsed="0.000000"/>
</kw>
<msg time="2024-08-13T13:38:29.647640" level="INFO">${isEmpty} = True</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.647640" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="PASS" start="2024-08-13T13:38:29.647640" elapsed="0.000000"/>
</return>
<status status="PASS" start="2024-08-13T13:38:29.647640" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.647640" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${type}</var>
<arg>${filling}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.647640" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.647640" elapsed="0.000000"/>
</kw>
<var name="${filling}"/>
<status status="NOT RUN" start="2024-08-13T13:38:29.647640" elapsed="0.000000"/>
</iter>
<var>${filling}</var>
<value>@{fillings}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.647640" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.647640" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.523366" elapsed="0.124274"/>
</kw>
<var name="${dessert}">{'id': '0003', 'type': 'donut', 'name': 'Old Fashioned', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}]}, 'topping': [{'id': '5001', 'type'...</var>
<status status="PASS" start="2024-08-13T13:38:29.520367" elapsed="0.127273"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nDESSERT</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.648772" elapsed="0.000000"/>
</kw>
<kw name="Validate Dessert Schema ${dessert}" source_name="Validate Dessert Schema ${dessert}">
<kw name="Validate Json By Schema File" owner="JSONLibrary">
<arg>json_object=${dessert}</arg>
<arg>path_to_schema=C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/dessert_schema.json</arg>
<doc>Validate json object by json schema file.
Arguments:
    - json_object: json as a dictionary object.
    - json_path: path to file with json schema</doc>
<status status="PASS" start="2024-08-13T13:38:29.648772" elapsed="0.002847"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.648772" elapsed="0.002847"/>
</kw>
<kw name="Print Dessert ${dessert}" source_name="Print Dessert ${dessert}">
<kw name="Get Dessert Info As Array ${dessert}" source_name="Get Dessert Info As Array ${dessert}">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.652621" level="INFO">@{info} = [ ]</msg>
<var>@{info}</var>
<arg>${null}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.652621" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.660128" level="INFO">${id} = ['0004']</msg>
<var>${id}</var>
<arg>${dessert}</arg>
<arg>id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.652621" elapsed="0.007507"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.668670" level="INFO">${type} = ['bar']</msg>
<var>${type}</var>
<arg>${dessert}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.660128" elapsed="0.008542"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.676672" level="INFO">${name} = ['Bar']</msg>
<var>${name}</var>
<arg>${dessert}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.668670" elapsed="0.008002"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.684409" level="INFO">${ppu} = [0.75]</msg>
<var>${ppu}</var>
<arg>${dessert}</arg>
<arg>ppu</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.676672" elapsed="0.007737"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.685440" level="INFO">@{info} = [ 0004 | bar | Bar | 0.75 ]</msg>
<var>@{info}</var>
<arg>${id[0]}</arg>
<arg>${type[0]}</arg>
<arg>${name[0]}</arg>
<arg>${ppu[0]}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-08-13T13:38:29.684409" elapsed="0.001031"/>
</kw>
<return>
<value>@{info}</value>
<status status="PASS" start="2024-08-13T13:38:29.685440" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.686414" level="INFO">@{dessertInfo} = [ 0004 | bar | Bar | 0.75 ]</msg>
<var>@{dessertInfo}</var>
<status status="PASS" start="2024-08-13T13:38:29.652621" elapsed="0.033793"/>
</kw>
<kw name="Get Batters As Array ${dessert}" source_name="Get Batters As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.694004" level="INFO">@{battersArray} = [ [{'id': '1001', 'type': 'Regular'}] ]</msg>
<var>@{battersArray}</var>
<arg>${dessert}</arg>
<arg>$..batters.batter</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.686414" elapsed="0.007590"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.694004" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.694004" level="FAIL">'[[{'id': '1001', 'type': 'Regular'}]]' should be empty.</msg>
<arg>${battersArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.694004" elapsed="0.000000">'[[{'id': '1001', 'type': 'Regular'}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.694004" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${battersArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.694004" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.694004" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.694004" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.694004" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.695014" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} ]</msg>
<var>@{batters}</var>
<arg>${battersArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.694004" elapsed="0.001010"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.695014" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.695014" level="FAIL">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.695014" elapsed="0.000000">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.695014" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.695014" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.695014" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.695014" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.695014" elapsed="0.000000"/>
</if>
<return>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.695014" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.695014" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} ]</msg>
<var>@{batters}</var>
<status status="PASS" start="2024-08-13T13:38:29.686414" elapsed="0.008600"/>
</kw>
<kw name="Get Toppings As Array ${dessert}" source_name="Get Toppings As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.703609" level="INFO">@{toppingsArray} = [ [{'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}] ]</msg>
<var>@{toppingsArray}</var>
<arg>${dessert}</arg>
<arg>$..topping</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.695014" elapsed="0.008595"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.704608" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.704608" level="FAIL">'[[{'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]]' should be empty.</msg>
<arg>${toppingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.704608" elapsed="0.000000">'[[{'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.704608" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.704608" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.704608" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.704608" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.704608" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.705608" level="INFO">@{toppings} = [ {'id': '5003', 'type': 'Chocolate'} | {'id': '5004', 'type': 'Maple'} ]</msg>
<var>@{toppings}</var>
<arg>@{toppingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.704608" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.705608" level="INFO">Length is 2.</msg>
<msg time="2024-08-13T13:38:29.705608" level="FAIL">'[{'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.705608" elapsed="0.000000">'[{'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.705608" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.705608" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.705608" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.705608" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.705608" elapsed="0.000000"/>
</if>
<return>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.705608" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.705608" level="INFO">@{toppings} = [ {'id': '5003', 'type': 'Chocolate'} | {'id': '5004', 'type': 'Maple'} ]</msg>
<var>@{toppings}</var>
<status status="PASS" start="2024-08-13T13:38:29.695014" elapsed="0.010594"/>
</kw>
<kw name="Get Fillings As Arary ${dessert}" source_name="Get Fillings As Arary ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.725678" level="INFO">@{fillingsArray} = [ [{'id': '7001', 'name': 'None', 'addcost': 0}, {'id': '7002', 'name': 'Custard', 'addcost': 0.25}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0.25}] ]</msg>
<var>@{fillingsArray}</var>
<arg>${dessert}</arg>
<arg>$..fillings.filling</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.705608" elapsed="0.020070"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.727301" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.727301" level="FAIL">'[[{'id': '7001', 'name': 'None', 'addcost': 0}, {'id': '7002', 'name': 'Custard', 'addcost': 0.25}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0.25}]]' should be empty.</msg>
<arg>${fillingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.727301" elapsed="0.000000">'[[{'id': '7001', 'name': 'None', 'addcost': 0}, {'id': '7002', 'name': 'Custard', 'addcost': 0.25}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0.25}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.727301" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.727301" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.727301" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.727301" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.727301" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.727301" level="INFO">@{fillings} = [ {'id': '7001', 'name': 'None', 'addcost': 0} | {'id': '7002', 'name': 'Custard', 'addcost': 0.25} | {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0.25} ]</msg>
<var>@{fillings}</var>
<arg>@{fillingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.727301" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.728303" level="INFO">Length is 3.</msg>
<msg time="2024-08-13T13:38:29.728303" level="FAIL">'[{'id': '7001', 'name': 'None', 'addcost': 0}, {'id': '7002', 'name': 'Custard', 'addcost': 0.25}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0.25}]' should be empty.</msg>
<arg>${fillings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.728303" elapsed="0.000000">'[{'id': '7001', 'name': 'None', 'addcost': 0}, {'id': '7002', 'name': 'Custard', 'addcost': 0.25}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0.25}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.728303" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.728303" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.728303" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.728303" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.728303" elapsed="0.000000"/>
</if>
<return>
<value>@{fillings}</value>
<status status="PASS" start="2024-08-13T13:38:29.728303" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.728303" level="INFO">@{fillings} = [ {'id': '7001', 'name': 'None', 'addcost': 0} | {'id': '7002', 'name': 'Custard', 'addcost': 0.25} | {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0.25} ]</msg>
<var>@{fillings}</var>
<status status="PASS" start="2024-08-13T13:38:29.705608" elapsed="0.022695"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${dessertInfo}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.729578" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== BATTERS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.729578" elapsed="0.001010"/>
</kw>
<kw name="Print Batter Types ${batters}" source_name="Print Batter Types ${batters}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.730588" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.730588" level="FAIL">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.730588" elapsed="0.000000">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.730588" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.730588" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.730588" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.730588" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.730588" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.739582" level="INFO">${type} = ['Regular']</msg>
<var>${type}</var>
<arg>${batter}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.730588" elapsed="0.008994"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.739582" elapsed="0.000000"/>
</kw>
<var name="${batter}">{'id': '1001', 'type': 'Regular'}</var>
<status status="PASS" start="2024-08-13T13:38:29.730588" elapsed="0.009994"/>
</iter>
<var>${batter}</var>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.730588" elapsed="0.009994"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.730588" elapsed="0.009994"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== TOPPINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.740582" elapsed="0.000000"/>
</kw>
<kw name="Print Topping Types ${toppings}" source_name="Print Topping Types ${toppings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.740582" level="INFO">Length is 2.</msg>
<msg time="2024-08-13T13:38:29.740582" level="FAIL">'[{'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.740582" elapsed="0.000000">'[{'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.741582" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.740582" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.741582" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.741582" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.741582" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.749509" level="INFO">${type} = ['Chocolate']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.741582" elapsed="0.007927"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.750801" elapsed="0.000000"/>
</kw>
<var name="${topping}">{'id': '5003', 'type': 'Chocolate'}</var>
<status status="PASS" start="2024-08-13T13:38:29.741582" elapsed="0.009219"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.758823" level="INFO">${type} = ['Maple']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.750801" elapsed="0.008022"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.758823" elapsed="0.001026"/>
</kw>
<var name="${topping}">{'id': '5004', 'type': 'Maple'}</var>
<status status="PASS" start="2024-08-13T13:38:29.750801" elapsed="0.009048"/>
</iter>
<var>${topping}</var>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.741582" elapsed="0.018267"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.740582" elapsed="0.019267"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== FILLINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.759849" elapsed="0.000000"/>
</kw>
<kw name="Print Filling Names ${fillings}" source_name="Print Filling Names ${fillings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.760856" level="INFO">Length is 3.</msg>
<msg time="2024-08-13T13:38:29.760856" level="FAIL">'[{'id': '7001', 'name': 'None', 'addcost': 0}, {'id': '7002', 'name': 'Custard', 'addcost': 0.25}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0.25}]' should be empty.</msg>
<arg>${fillings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.760856" elapsed="0.000000">'[{'id': '7001', 'name': 'None', 'addcost': 0}, {'id': '7002', 'name': 'Custard', 'addcost': 0.25}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0.25}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.760856" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.760856" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.760856" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.760856" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.760856" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.769399" level="INFO">${type} = ['None']</msg>
<var>${type}</var>
<arg>${filling}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.760856" elapsed="0.008543"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.769399" elapsed="0.001002"/>
</kw>
<var name="${filling}">{'id': '7001', 'name': 'None', 'addcost': 0}</var>
<status status="PASS" start="2024-08-13T13:38:29.760856" elapsed="0.009545"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.777905" level="INFO">${type} = ['Custard']</msg>
<var>${type}</var>
<arg>${filling}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.770401" elapsed="0.007504"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.777905" elapsed="0.001109"/>
</kw>
<var name="${filling}">{'id': '7002', 'name': 'Custard', 'addcost': 0.25}</var>
<status status="PASS" start="2024-08-13T13:38:29.770401" elapsed="0.008613"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.787436" level="INFO">${type} = ['Whipped Cream']</msg>
<var>${type}</var>
<arg>${filling}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.779014" elapsed="0.008422"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.787436" elapsed="0.000000"/>
</kw>
<var name="${filling}">{'id': '7003', 'name': 'Whipped Cream', 'addcost': 0.25}</var>
<status status="PASS" start="2024-08-13T13:38:29.779014" elapsed="0.008422"/>
</iter>
<var>${filling}</var>
<value>@{fillings}</value>
<status status="PASS" start="2024-08-13T13:38:29.760856" elapsed="0.026580"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.759849" elapsed="0.027587"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.652621" elapsed="0.134815"/>
</kw>
<var name="${dessert}">{'id': '0004', 'type': 'bar', 'name': 'Bar', 'ppu': 0.75, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}]}, 'topping': [{'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}],...</var>
<status status="PASS" start="2024-08-13T13:38:29.647640" elapsed="0.139796"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nDESSERT</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.787436" elapsed="0.001513"/>
</kw>
<kw name="Validate Dessert Schema ${dessert}" source_name="Validate Dessert Schema ${dessert}">
<kw name="Validate Json By Schema File" owner="JSONLibrary">
<arg>json_object=${dessert}</arg>
<arg>path_to_schema=C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/dessert_schema.json</arg>
<doc>Validate json object by json schema file.
Arguments:
    - json_object: json as a dictionary object.
    - json_path: path to file with json schema</doc>
<status status="PASS" start="2024-08-13T13:38:29.788949" elapsed="0.001987"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.788949" elapsed="0.001987"/>
</kw>
<kw name="Print Dessert ${dessert}" source_name="Print Dessert ${dessert}">
<kw name="Get Dessert Info As Array ${dessert}" source_name="Get Dessert Info As Array ${dessert}">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.791936" level="INFO">@{info} = [ ]</msg>
<var>@{info}</var>
<arg>${null}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.791936" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.798948" level="INFO">${id} = ['0005']</msg>
<var>${id}</var>
<arg>${dessert}</arg>
<arg>id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.791936" elapsed="0.007012"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.805973" level="INFO">${type} = ['twist']</msg>
<var>${type}</var>
<arg>${dessert}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.798948" elapsed="0.007025"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.814065" level="INFO">${name} = ['Twist']</msg>
<var>${name}</var>
<arg>${dessert}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.807569" elapsed="0.006496"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.823028" level="INFO">${ppu} = [0.65]</msg>
<var>${ppu}</var>
<arg>${dessert}</arg>
<arg>ppu</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.814065" elapsed="0.008963"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.824028" level="INFO">@{info} = [ 0005 | twist | Twist | 0.65 ]</msg>
<var>@{info}</var>
<arg>${id[0]}</arg>
<arg>${type[0]}</arg>
<arg>${name[0]}</arg>
<arg>${ppu[0]}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-08-13T13:38:29.823028" elapsed="0.001000"/>
</kw>
<return>
<value>@{info}</value>
<status status="PASS" start="2024-08-13T13:38:29.824028" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.824028" level="INFO">@{dessertInfo} = [ 0005 | twist | Twist | 0.65 ]</msg>
<var>@{dessertInfo}</var>
<status status="PASS" start="2024-08-13T13:38:29.791936" elapsed="0.032092"/>
</kw>
<kw name="Get Batters As Array ${dessert}" source_name="Get Batters As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.831634" level="INFO">@{battersArray} = [ [{'id': '1001', 'type': 'Regular'}] ]</msg>
<var>@{battersArray}</var>
<arg>${dessert}</arg>
<arg>$..batters.batter</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.824028" elapsed="0.007606"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.831634" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.831634" level="FAIL">'[[{'id': '1001', 'type': 'Regular'}]]' should be empty.</msg>
<arg>${battersArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.831634" elapsed="0.000000">'[[{'id': '1001', 'type': 'Regular'}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.831634" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${battersArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.831634" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.831634" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.831634" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.831634" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.831634" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} ]</msg>
<var>@{batters}</var>
<arg>${battersArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.831634" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.832634" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.832634" level="FAIL">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.832634" elapsed="0.000000">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.832634" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.831634" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.832634" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.832634" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.832634" elapsed="0.000000"/>
</if>
<return>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.832634" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.832634" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} ]</msg>
<var>@{batters}</var>
<status status="PASS" start="2024-08-13T13:38:29.824028" elapsed="0.008606"/>
</kw>
<kw name="Get Toppings As Array ${dessert}" source_name="Get Toppings As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.841013" level="INFO">@{toppingsArray} = [ [{'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}] ]</msg>
<var>@{toppingsArray}</var>
<arg>${dessert}</arg>
<arg>$..topping</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.832634" elapsed="0.008379"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.841013" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.841013" level="FAIL">'[[{'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}]]' should be empty.</msg>
<arg>${toppingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.841013" elapsed="0.000000">'[[{'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.841013" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.841013" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.841013" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.841013" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.841013" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.842076" level="INFO">@{toppings} = [ {'id': '5002', 'type': 'Glazed'} | {'id': '5005', 'type': 'Sugar'} ]</msg>
<var>@{toppings}</var>
<arg>@{toppingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.841013" elapsed="0.001063"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.842076" level="INFO">Length is 2.</msg>
<msg time="2024-08-13T13:38:29.842076" level="FAIL">'[{'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.842076" elapsed="0.000000">'[{'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.842076" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.842076" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.842076" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.842076" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.842076" elapsed="0.000000"/>
</if>
<return>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.842076" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.842076" level="INFO">@{toppings} = [ {'id': '5002', 'type': 'Glazed'} | {'id': '5005', 'type': 'Sugar'} ]</msg>
<var>@{toppings}</var>
<status status="PASS" start="2024-08-13T13:38:29.832634" elapsed="0.009442"/>
</kw>
<kw name="Get Fillings As Arary ${dessert}" source_name="Get Fillings As Arary ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.849873" level="INFO">@{fillingsArray} = [ ]</msg>
<var>@{fillingsArray}</var>
<arg>${dessert}</arg>
<arg>$..fillings.filling</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.842076" elapsed="0.007797"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.850876" level="INFO">Length is 0.</msg>
<arg>${fillingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</kw>
<msg time="2024-08-13T13:38:29.850876" level="INFO">${isEmpty} = True</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="PASS" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</return>
<status status="PASS" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<var>@{fillings}</var>
<arg>@{fillingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</if>
<return>
<value>@{fillings}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.850876" level="INFO">@{fillings} = [ ]</msg>
<var>@{fillings}</var>
<status status="PASS" start="2024-08-13T13:38:29.842076" elapsed="0.008800"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${dessertInfo}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.850876" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== BATTERS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.850876" elapsed="0.001485"/>
</kw>
<kw name="Print Batter Types ${batters}" source_name="Print Batter Types ${batters}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.852361" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.852361" level="FAIL">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.852361" elapsed="0.000000">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.852361" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.852361" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.852361" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.852361" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.852361" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.860262" level="INFO">${type} = ['Regular']</msg>
<var>${type}</var>
<arg>${batter}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.853368" elapsed="0.006894"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.860262" elapsed="0.001257"/>
</kw>
<var name="${batter}">{'id': '1001', 'type': 'Regular'}</var>
<status status="PASS" start="2024-08-13T13:38:29.853368" elapsed="0.008151"/>
</iter>
<var>${batter}</var>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.853368" elapsed="0.008151"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.852361" elapsed="0.009158"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== TOPPINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.861519" elapsed="0.000000"/>
</kw>
<kw name="Print Topping Types ${toppings}" source_name="Print Topping Types ${toppings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.862524" level="INFO">Length is 2.</msg>
<msg time="2024-08-13T13:38:29.862524" level="FAIL">'[{'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.862524" elapsed="0.000000">'[{'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.862524" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.862524" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.862524" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.862524" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.862524" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.871396" level="INFO">${type} = ['Glazed']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.862524" elapsed="0.008872"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.871396" elapsed="0.001015"/>
</kw>
<var name="${topping}">{'id': '5002', 'type': 'Glazed'}</var>
<status status="PASS" start="2024-08-13T13:38:29.862524" elapsed="0.009887"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.880225" level="INFO">${type} = ['Sugar']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.872411" elapsed="0.007814"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.880225" elapsed="0.001337"/>
</kw>
<var name="${topping}">{'id': '5005', 'type': 'Sugar'}</var>
<status status="PASS" start="2024-08-13T13:38:29.872411" elapsed="0.009151"/>
</iter>
<var>${topping}</var>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.862524" elapsed="0.019038"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.861519" elapsed="0.020043"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== FILLINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.881562" elapsed="0.000000"/>
</kw>
<kw name="Print Filling Names ${fillings}" source_name="Print Filling Names ${fillings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.882577" level="INFO">Length is 0.</msg>
<arg>${fillings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="PASS" start="2024-08-13T13:38:29.882577" elapsed="0.000000"/>
</kw>
<msg time="2024-08-13T13:38:29.882577" level="INFO">${isEmpty} = True</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.882577" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="PASS" start="2024-08-13T13:38:29.882577" elapsed="0.000000"/>
</return>
<status status="PASS" start="2024-08-13T13:38:29.882577" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.882577" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${type}</var>
<arg>${filling}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.882577" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.882577" elapsed="0.000000"/>
</kw>
<var name="${filling}"/>
<status status="NOT RUN" start="2024-08-13T13:38:29.882577" elapsed="0.000000"/>
</iter>
<var>${filling}</var>
<value>@{fillings}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.882577" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.881562" elapsed="0.001015"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.790936" elapsed="0.091641"/>
</kw>
<var name="${dessert}">{'id': '0005', 'type': 'twist', 'name': 'Twist', 'ppu': 0.65, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}]}, 'topping': [{'id': '5002', 'type': 'Glazed'}, {'id': '5005', 'type': 'Sugar'}]...</var>
<status status="PASS" start="2024-08-13T13:38:29.787436" elapsed="0.095141"/>
</iter>
<iter>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nDESSERT</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.883576" elapsed="0.000000"/>
</kw>
<kw name="Validate Dessert Schema ${dessert}" source_name="Validate Dessert Schema ${dessert}">
<kw name="Validate Json By Schema File" owner="JSONLibrary">
<arg>json_object=${dessert}</arg>
<arg>path_to_schema=C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/dessert_schema.json</arg>
<doc>Validate json object by json schema file.
Arguments:
    - json_object: json as a dictionary object.
    - json_path: path to file with json schema</doc>
<status status="PASS" start="2024-08-13T13:38:29.883576" elapsed="0.003001"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.883576" elapsed="0.003001"/>
</kw>
<kw name="Print Dessert ${dessert}" source_name="Print Dessert ${dessert}">
<kw name="Get Dessert Info As Array ${dessert}" source_name="Get Dessert Info As Array ${dessert}">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.886577" level="INFO">@{info} = [ ]</msg>
<var>@{info}</var>
<arg>${null}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.886577" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.894313" level="INFO">${id} = ['0006']</msg>
<var>${id}</var>
<arg>${dessert}</arg>
<arg>id</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.886577" elapsed="0.007736"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.901821" level="INFO">${type} = ['filled']</msg>
<var>${type}</var>
<arg>${dessert}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.894313" elapsed="0.007508"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.909358" level="INFO">${name} = ['Filled']</msg>
<var>${name}</var>
<arg>${dessert}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.901821" elapsed="0.007537"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.917865" level="INFO">${ppu} = [0.75]</msg>
<var>${ppu}</var>
<arg>${dessert}</arg>
<arg>ppu</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.909358" elapsed="0.008507"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.918867" level="INFO">@{info} = [ 0006 | filled | Filled | 0.75 ]</msg>
<var>@{info}</var>
<arg>${id[0]}</arg>
<arg>${type[0]}</arg>
<arg>${name[0]}</arg>
<arg>${ppu[0]}</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-08-13T13:38:29.917865" elapsed="0.001002"/>
</kw>
<return>
<value>@{info}</value>
<status status="PASS" start="2024-08-13T13:38:29.918867" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.918867" level="INFO">@{dessertInfo} = [ 0006 | filled | Filled | 0.75 ]</msg>
<var>@{dessertInfo}</var>
<status status="PASS" start="2024-08-13T13:38:29.886577" elapsed="0.032290"/>
</kw>
<kw name="Get Batters As Array ${dessert}" source_name="Get Batters As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.925882" level="INFO">@{battersArray} = [ [{'id': '1001', 'type': 'Regular'}] ]</msg>
<var>@{battersArray}</var>
<arg>${dessert}</arg>
<arg>$..batters.batter</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.918867" elapsed="0.007015"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.925882" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.925882" level="FAIL">'[[{'id': '1001', 'type': 'Regular'}]]' should be empty.</msg>
<arg>${battersArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.925882" elapsed="0.000000">'[[{'id': '1001', 'type': 'Regular'}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.927393" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${battersArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.925882" elapsed="0.001511"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.927393" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.927393" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.927393" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.927393" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} ]</msg>
<var>@{batters}</var>
<arg>${battersArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.927393" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.927393" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.928420" level="FAIL">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.927393" elapsed="0.001027">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.928420" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.927393" elapsed="0.001027"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.928420" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.928420" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.928420" elapsed="0.000000"/>
</if>
<return>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.928420" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.928420" level="INFO">@{batters} = [ {'id': '1001', 'type': 'Regular'} ]</msg>
<var>@{batters}</var>
<status status="PASS" start="2024-08-13T13:38:29.918867" elapsed="0.009553"/>
</kw>
<kw name="Get Toppings As Array ${dessert}" source_name="Get Toppings As Array ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.937483" level="INFO">@{toppingsArray} = [ [{'id': '5002', 'type': 'Glazed'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}] ]</msg>
<var>@{toppingsArray}</var>
<arg>${dessert}</arg>
<arg>$..topping</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.928420" elapsed="0.009063"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.937483" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.937483" level="FAIL">'[[{'id': '5002', 'type': 'Glazed'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]]' should be empty.</msg>
<arg>${toppingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.937483" elapsed="0.000000">'[[{'id': '5002', 'type': 'Glazed'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.937483" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.937483" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.937483" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.937483" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.937483" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.938495" level="INFO">@{toppings} = [ {'id': '5002', 'type': 'Glazed'} | {'id': '5007', 'type': 'Powdered Sugar'} | {'id': '5003', 'type': 'Chocolate'} | {'id': '5004', 'type': 'Maple'} ]</msg>
<var>@{toppings}</var>
<arg>@{toppingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.937483" elapsed="0.001012"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.938495" level="INFO">Length is 4.</msg>
<msg time="2024-08-13T13:38:29.938495" level="FAIL">'[{'id': '5002', 'type': 'Glazed'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.938495" elapsed="0.000000">'[{'id': '5002', 'type': 'Glazed'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.938495" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.938495" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<kw name="Return From Keyword" owner="BuiltIn">
<doc>Returns from the enclosing user keyword.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:29.938495" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:29.938495" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.938495" elapsed="0.000000"/>
</if>
<return>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.938495" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.938495" level="INFO">@{toppings} = [ {'id': '5002', 'type': 'Glazed'} | {'id': '5007', 'type': 'Powdered Sugar'} | {'id': '5003', 'type': 'Chocolate'} | {'id': '5004', 'type': 'Maple'} ]</msg>
<var>@{toppings}</var>
<status status="PASS" start="2024-08-13T13:38:29.928420" elapsed="0.010075"/>
</kw>
<kw name="Get Fillings As Arary ${dessert}" source_name="Get Fillings As Arary ${dessert}">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.946517" level="INFO">@{fillingsArray} = [ [{'id': '7002', 'name': 'Custard', 'addcost': 0}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0}, {'id': '7004', 'name': 'Strawberry Jelly', 'addcost': 0}, {'id': '7005', 'name': 'Rasberry Je...</msg>
<var>@{fillingsArray}</var>
<arg>${dessert}</arg>
<arg>$..fillings.filling</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.938495" elapsed="0.008022"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.946517" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.946517" level="FAIL">'[[{'id': '7002', 'name': 'Custard', 'addcost': 0}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0}, {'id': '7004', 'name': 'Strawberry Jelly', 'addcost': 0}, {'id': '7005', 'name': 'Rasberry Jelly', 'addcost': 0}]]' should be empty.</msg>
<arg>${fillingsArray}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.946517" elapsed="0.000000">'[[{'id': '7002', 'name': 'Custard', 'addcost': 0}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0}, {'id': '7004', 'name': 'Strawberry Jelly', 'addcost': 0}, {'id': '7005', 'name': 'Rasberry Jelly', 'addcost': 0}]]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.946517" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillingsArray}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.946517" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.947515" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.947515" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.947515" elapsed="0.000000"/>
</if>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.947515" level="INFO">@{fillings} = [ {'id': '7002', 'name': 'Custard', 'addcost': 0} | {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0} | {'id': '7004', 'name': 'Strawberry Jelly', 'addcost': 0} | {'id': '7005', 'name': 'Rasberry ...</msg>
<var>@{fillings}</var>
<arg>@{fillingsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:29.947515" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.948037" level="INFO">Length is 4.</msg>
<msg time="2024-08-13T13:38:29.948037" level="FAIL">'[{'id': '7002', 'name': 'Custard', 'addcost': 0}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0}, {'id': '7004', 'name': 'Strawberry Jelly', 'addcost': 0}, {'id': '7005', 'name': 'Rasberry Jelly', 'addcost': 0}]' should be empty.</msg>
<arg>${fillings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.948037" elapsed="0.000000">'[{'id': '7002', 'name': 'Custard', 'addcost': 0}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0}, {'id': '7004', 'name': 'Strawberry Jelly', 'addcost': 0}, {'id': '7005', 'name': 'Rasberry Jelly', 'addcost': 0}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.948037" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.947515" elapsed="0.000522"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.948037" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.948037" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.948037" elapsed="0.000000"/>
</if>
<return>
<value>@{fillings}</value>
<status status="PASS" start="2024-08-13T13:38:29.948037" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:29.948037" level="INFO">@{fillings} = [ {'id': '7002', 'name': 'Custard', 'addcost': 0} | {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0} | {'id': '7004', 'name': 'Strawberry Jelly', 'addcost': 0} | {'id': '7005', 'name': 'Rasberry ...</msg>
<var>@{fillings}</var>
<status status="PASS" start="2024-08-13T13:38:29.938495" elapsed="0.009542"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${dessertInfo}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.948037" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== BATTERS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.948037" elapsed="0.001064"/>
</kw>
<kw name="Print Batter Types ${batters}" source_name="Print Batter Types ${batters}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.949101" level="INFO">Length is 1.</msg>
<msg time="2024-08-13T13:38:29.949101" level="FAIL">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</msg>
<arg>${batters}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.949101" elapsed="0.000000">'[{'id': '1001', 'type': 'Regular'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.949101" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${batters}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.949101" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.949101" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.949101" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.949101" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.957652" level="INFO">${type} = ['Regular']</msg>
<var>${type}</var>
<arg>${batter}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.949101" elapsed="0.008551"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.957652" elapsed="0.000000"/>
</kw>
<var name="${batter}">{'id': '1001', 'type': 'Regular'}</var>
<status status="PASS" start="2024-08-13T13:38:29.949101" elapsed="0.008551"/>
</iter>
<var>${batter}</var>
<value>@{batters}</value>
<status status="PASS" start="2024-08-13T13:38:29.949101" elapsed="0.008551"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.949101" elapsed="0.008551"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== TOPPINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.957652" elapsed="0.001013"/>
</kw>
<kw name="Print Topping Types ${toppings}" source_name="Print Topping Types ${toppings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.958665" level="INFO">Length is 4.</msg>
<msg time="2024-08-13T13:38:29.958665" level="FAIL">'[{'id': '5002', 'type': 'Glazed'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</msg>
<arg>${toppings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.958665" elapsed="0.000000">'[{'id': '5002', 'type': 'Glazed'}, {'id': '5007', 'type': 'Powdered Sugar'}, {'id': '5003', 'type': 'Chocolate'}, {'id': '5004', 'type': 'Maple'}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.958665" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${toppings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.958665" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.958665" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.958665" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.958665" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.967907" level="INFO">${type} = ['Glazed']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.958665" elapsed="0.009242"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.968922" elapsed="0.000466"/>
</kw>
<var name="${topping}">{'id': '5002', 'type': 'Glazed'}</var>
<status status="PASS" start="2024-08-13T13:38:29.958665" elapsed="0.010723"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.977418" level="INFO">${type} = ['Powdered Sugar']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.969388" elapsed="0.008030"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.977418" elapsed="0.001517"/>
</kw>
<var name="${topping}">{'id': '5007', 'type': 'Powdered Sugar'}</var>
<status status="PASS" start="2024-08-13T13:38:29.969388" elapsed="0.009547"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.986333" level="INFO">${type} = ['Chocolate']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.978935" elapsed="0.007398"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.986333" elapsed="0.001000"/>
</kw>
<var name="${topping}">{'id': '5003', 'type': 'Chocolate'}</var>
<status status="PASS" start="2024-08-13T13:38:29.978935" elapsed="0.008398"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:29.996524" level="INFO">${type} = ['Maple']</msg>
<var>${type}</var>
<arg>${topping}</arg>
<arg>type</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.987333" elapsed="0.009191"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.996524" elapsed="0.001001"/>
</kw>
<var name="${topping}">{'id': '5004', 'type': 'Maple'}</var>
<status status="PASS" start="2024-08-13T13:38:29.987333" elapsed="0.010192"/>
</iter>
<var>${topping}</var>
<value>@{toppings}</value>
<status status="PASS" start="2024-08-13T13:38:29.958665" elapsed="0.038860"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.958665" elapsed="0.038860"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>================== FILLINGS ==========</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:29.997525" elapsed="0.000000"/>
</kw>
<kw name="Print Filling Names ${fillings}" source_name="Print Filling Names ${fillings}">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Empty" owner="BuiltIn">
<msg time="2024-08-13T13:38:29.997525" level="INFO">Length is 4.</msg>
<msg time="2024-08-13T13:38:29.997525" level="FAIL">'[{'id': '7002', 'name': 'Custard', 'addcost': 0}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0}, {'id': '7004', 'name': 'Strawberry Jelly', 'addcost': 0}, {'id': '7005', 'name': 'Rasberry Jelly', 'addcost': 0}]' should be empty.</msg>
<arg>${fillings}</arg>
<doc>Verifies that the given item is empty.</doc>
<status status="FAIL" start="2024-08-13T13:38:29.997525" elapsed="0.000000">'[{'id': '7002', 'name': 'Custard', 'addcost': 0}, {'id': '7003', 'name': 'Whipped Cream', 'addcost': 0}, {'id': '7004', 'name': 'Strawberry Jelly', 'addcost': 0}, {'id': '7005', 'name': 'Rasberry Jelly', 'addcost': 0}]' should be empty.</status>
</kw>
<msg time="2024-08-13T13:38:29.997525" level="INFO">${isEmpty} = False</msg>
<var>${isEmpty}</var>
<arg>Should Be Empty</arg>
<arg>${fillings}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-08-13T13:38:29.997525" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${isEmpty} == ${True}">
<return>
<value>${null}</value>
<status status="NOT RUN" start="2024-08-13T13:38:29.998715" elapsed="0.000000"/>
</return>
<status status="NOT RUN" start="2024-08-13T13:38:29.998715" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:29.997525" elapsed="0.001190"/>
</if>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.006114" level="INFO">${type} = ['Custard']</msg>
<var>${type}</var>
<arg>${filling}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:29.998715" elapsed="0.007399"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.006114" elapsed="0.001651"/>
</kw>
<var name="${filling}">{'id': '7002', 'name': 'Custard', 'addcost': 0}</var>
<status status="PASS" start="2024-08-13T13:38:29.998715" elapsed="0.009050"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.015775" level="INFO">${type} = ['Whipped Cream']</msg>
<var>${type}</var>
<arg>${filling}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:30.007765" elapsed="0.008010"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.015775" elapsed="0.001592"/>
</kw>
<var name="${filling}">{'id': '7003', 'name': 'Whipped Cream', 'addcost': 0}</var>
<status status="PASS" start="2024-08-13T13:38:30.007765" elapsed="0.009602"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.025642" level="INFO">${type} = ['Strawberry Jelly']</msg>
<var>${type}</var>
<arg>${filling}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:30.017367" elapsed="0.008275"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.025642" elapsed="0.000933"/>
</kw>
<var name="${filling}">{'id': '7004', 'name': 'Strawberry Jelly', 'addcost': 0}</var>
<status status="PASS" start="2024-08-13T13:38:30.017367" elapsed="0.009208"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.049786" level="INFO">${type} = ['Rasberry Jelly']</msg>
<var>${type}</var>
<arg>${filling}</arg>
<arg>name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:30.026575" elapsed="0.023211"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${type[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.049786" elapsed="0.001000"/>
</kw>
<var name="${filling}">{'id': '7005', 'name': 'Rasberry Jelly', 'addcost': 0}</var>
<status status="PASS" start="2024-08-13T13:38:30.026575" elapsed="0.024211"/>
</iter>
<var>${filling}</var>
<value>@{fillings}</value>
<status status="PASS" start="2024-08-13T13:38:29.998715" elapsed="0.052071"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.997525" elapsed="0.053261"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:29.886577" elapsed="0.164209"/>
</kw>
<var name="${dessert}">{'id': '0006', 'type': 'filled', 'name': 'Filled', 'ppu': 0.75, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}]}, 'topping': [{'id': '5002', 'type': 'Glazed'}, {'id': '5007', 'type': 'Powder...</var>
<status status="PASS" start="2024-08-13T13:38:29.882577" elapsed="0.168209"/>
</iter>
<var>${dessert}</var>
<value>@{desserts}</value>
<status status="PASS" start="2024-08-13T13:38:29.204629" elapsed="0.846157"/>
</for>
<status status="PASS" start="2024-08-13T13:38:29.192235" elapsed="0.858551"/>
</test>
<test id="s1-s7-t2" name="Update JSON" line="23">
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.052786" level="INFO">${json} = {'items': {'item': [{'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': '...</msg>
<var>${json}</var>
<arg>C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/Complex_Data.json</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2024-08-13T13:38:30.051786" elapsed="0.001000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.060356" level="INFO">@{dessertsArray} = [ [{'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id...</msg>
<var>@{dessertsArray}</var>
<arg>${json}</arg>
<arg>$..items.item</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:30.052786" elapsed="0.008570"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.061397" level="INFO">@{desserts} = [ {'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id'...</msg>
<var>@{desserts}</var>
<arg>@{dessertsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:30.061397" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.061397" level="INFO">${my_dessert} = {'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id': ...</msg>
<var>${my_dessert}</var>
<arg>${desserts[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:30.061397" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.062410" level="INFO">${new_name} = CHEESECAKE_69</msg>
<var>${new_name}</var>
<arg>CHEESECAKE_69</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:30.062410" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.062410" level="INFO">${new_batter_type} = FANTASTIC</msg>
<var>${new_batter_type}</var>
<arg>FANTASTIC</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:30.062410" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\nORIGINAL JSON:\n${my_dessert}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.062410" elapsed="0.000000"/>
</kw>
<kw name="Update Value To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.072005" level="INFO">${updated_dessert} = {'id': '0001', 'type': 'donut', 'name': 'CHEESECAKE_69', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}...</msg>
<var>${updated_dessert}</var>
<arg>${my_dessert}</arg>
<arg>$..name</arg>
<arg>${new_name}</arg>
<doc>Update value to JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:30.063412" elapsed="0.008593"/>
</kw>
<kw name="Update Value To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.080616" level="INFO">${updated_dessert} = {'id': '0001', 'type': 'donut', 'name': 'CHEESECAKE_69', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'FANTASTIC'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry...</msg>
<var>${updated_dessert}</var>
<arg>${updated_dessert}</arg>
<arg>$..batters.batter[0].type</arg>
<arg>${new_batter_type}</arg>
<doc>Update value to JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:30.072005" elapsed="0.008611"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\nUPDATED JSON:\n${updated_dessert}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.081102" elapsed="0.000000"/>
</kw>
<kw name="Validate Dessert Schema ${updated_dessert}" source_name="Validate Dessert Schema ${dessert}">
<kw name="Validate Json By Schema File" owner="JSONLibrary">
<arg>json_object=${dessert}</arg>
<arg>path_to_schema=C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/dessert_schema.json</arg>
<doc>Validate json object by json schema file.
Arguments:
    - json_object: json as a dictionary object.
    - json_path: path to file with json schema</doc>
<status status="PASS" start="2024-08-13T13:38:30.082105" elapsed="0.003319"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:30.082105" elapsed="0.003319"/>
</kw>
<doc>rename existing values in the dessert</doc>
<status status="PASS" start="2024-08-13T13:38:30.051786" elapsed="0.033638"/>
</test>
<test id="s1-s7-t3" name="Add Value to JSON" line="39">
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.086592" level="INFO">${json} = {'items': {'item': [{'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': '...</msg>
<var>${json}</var>
<arg>C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/Complex_Data.json</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2024-08-13T13:38:30.086592" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.095582" level="INFO">@{dessertsArray} = [ [{'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id...</msg>
<var>@{dessertsArray}</var>
<arg>${json}</arg>
<arg>$..items.item</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:30.087592" elapsed="0.007990"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.095582" level="INFO">@{desserts} = [ {'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id'...</msg>
<var>@{desserts}</var>
<arg>@{dessertsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:30.095582" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.096574" level="INFO">${my_dessert} = {'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id': ...</msg>
<var>${my_dessert}</var>
<arg>${desserts[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:30.095582" elapsed="0.000992"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.096574" level="INFO">${new_topping} = {'id': '9999', 'type': 'MARVELLOUS_TOPPING'}</msg>
<var>${new_topping}</var>
<arg>id=9999</arg>
<arg>type=MARVELLOUS_TOPPING</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:30.096574" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\nORIGINAL JSON:\n${my_dessert}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.097573" elapsed="0.000505"/>
</kw>
<kw name="Add Object To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.107403" level="INFO">${updated_dessert} = {'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id': ...</msg>
<var>${updated_dessert}</var>
<arg>${my_dessert}</arg>
<arg>$..topping</arg>
<arg>${new_topping}</arg>
<doc>Add an dictionary or list object to json object using json_path</doc>
<status status="PASS" start="2024-08-13T13:38:30.098078" elapsed="0.009325"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\nUPDATED JSON:\n${updated_dessert}\n\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.108412" elapsed="0.000000"/>
</kw>
<kw name="Validate Dessert Schema ${updated_dessert}" source_name="Validate Dessert Schema ${dessert}">
<kw name="Validate Json By Schema File" owner="JSONLibrary">
<arg>json_object=${dessert}</arg>
<arg>path_to_schema=C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/dessert_schema.json</arg>
<doc>Validate json object by json schema file.
Arguments:
    - json_object: json as a dictionary object.
    - json_path: path to file with json schema</doc>
<status status="PASS" start="2024-08-13T13:38:30.109434" elapsed="0.002033"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:30.108412" elapsed="0.003055"/>
</kw>
<doc>add new topping to existing dessert and validate by schema</doc>
<status status="PASS" start="2024-08-13T13:38:30.085424" elapsed="0.026043"/>
</test>
<test id="s1-s7-t4" name="Delete Value from JSON" line="53">
<kw name="Load Json From File" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.112481" level="INFO">${json} = {'items': {'item': [{'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': '...</msg>
<var>${json}</var>
<arg>C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/Complex_Data.json</arg>
<doc>Load JSON from file.</doc>
<status status="PASS" start="2024-08-13T13:38:30.112481" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.121509" level="INFO">@{dessertsArray} = [ [{'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id...</msg>
<var>@{dessertsArray}</var>
<arg>${json}</arg>
<arg>$..items.item</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:30.112481" elapsed="0.009028"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.121509" level="INFO">@{desserts} = [ {'id': '0001', 'type': 'donut', 'name': 'Cake', 'ppu': 0.55, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}, {'id': '1002', 'type': 'Chocolate'}, {'id': '1003', 'type': 'Blueberry'}, {'id'...</msg>
<var>@{desserts}</var>
<arg>@{dessertsArray[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:30.121509" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.122929" level="INFO">${my_dessert} = {'id': '0006', 'type': 'filled', 'name': 'Filled', 'ppu': 0.75, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}]}, 'topping': [{'id': '5002', 'type': 'Glazed'}, {'id': '5007', 'type': 'Powder...</msg>
<var>${my_dessert}</var>
<arg>${desserts[5]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:30.121509" elapsed="0.001420"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\nORIGINAL JSON:\n${my_dessert}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.122929" elapsed="0.001214"/>
</kw>
<kw name="Delete Object From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.131787" level="INFO">${updated_dessert} = {'id': '0006', 'type': 'filled', 'name': 'Filled', 'ppu': 0.75, 'batters': {'batter': [{'id': '1001', 'type': 'Regular'}]}, 'topping': [{'id': '5002', 'type': 'Glazed'}, {'id': '5007', 'type': 'Powder...</msg>
<var>${updated_dessert}</var>
<arg>${my_dessert}</arg>
<arg>$..filling[2]</arg>
<doc>Delete Object From JSON using json_path</doc>
<status status="PASS" start="2024-08-13T13:38:30.124143" elapsed="0.007644"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\nUPDATED JSON:\n${updated_dessert}\n\n</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.132798" elapsed="0.001213"/>
</kw>
<kw name="Validate Dessert Schema ${updated_dessert}" source_name="Validate Dessert Schema ${dessert}">
<kw name="Validate Json By Schema File" owner="JSONLibrary">
<arg>json_object=${dessert}</arg>
<arg>path_to_schema=C:\\Users\\Vikto\\source\\repos\\Robot Framework API Testing 2024\\tests/../resources/dessert_schema.json</arg>
<doc>Validate json object by json schema file.
Arguments:
    - json_object: json as a dictionary object.
    - json_path: path to file with json schema</doc>
<status status="PASS" start="2024-08-13T13:38:30.134011" elapsed="0.003589"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:30.134011" elapsed="0.003642"/>
</kw>
<doc>remove filling from an existing dessert and validate by schema</doc>
<status status="PASS" start="2024-08-13T13:38:30.111467" elapsed="0.026186"/>
</test>
<status status="PASS" start="2024-08-13T13:38:29.186725" elapsed="0.950928"/>
</suite>
<suite id="s1-s8" name="TC 008 Token Authentication" source="C:\Users\Vikto\source\repos\Robot Framework API Testing 2024\tests\TC_008_Token_Authentication.robot">
<test id="s1-s8-t1" name="Login" line="12">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:30.141784" level="INFO">Creating Session using : alias=reqres, url=https://reqres.in/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>reqres</arg>
<arg>${reqreS_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-13T13:38:30.141784" elapsed="0.000000"/>
</kw>
<kw name="Login and Get Token">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.142911" level="INFO">${login_json} = {'email': 'eve.holt@reqres.in', 'password': 'cityslicka'}</msg>
<var>${login_json}</var>
<arg>email=eve.holt@reqres.in</arg>
<arg>password=cityslicka</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:30.142911" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:30.278786" level="INFO">POST Request : url=https://reqres.in/api/login 
 path_url=/api/login 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '57'} 
 body=b'{"email": "eve.holt@reqres.in", "password": "cityslicka"}' 
 </msg>
<msg time="2024-08-13T13:38:30.278786" level="INFO">POST Response : url=https://reqres.in/api/login 
 status=200, reason=OK 
 headers={'Date': 'Tue, 13 Aug 2024 11:38:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '29', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1723549112&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=k6%2FNxI7YukOYmHeJGlpxAh4GsO%2BT5g%2FhS3KWmyteHxk%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1723549112&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=k6%2FNxI7YukOYmHeJGlpxAh4GsO%2BT5g%2FhS3KWmyteHxk%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"1d-lGCrvD6B7Qzk11+2C98+nGhhuec"', 'Via': '1.1 vegur', 'CF-Cache-Status': 'DYNAMIC', 'Server': 'cloudflare', 'CF-RAY': '8b286b5e9b2366d3-AMS'} 
 body={"token":"QpwL5tke4Pnpja7X4"} 
 </msg>
<msg time="2024-08-13T13:38:30.279800" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'reqres.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:30.279800" level="INFO">${login_response} = &lt;Response [200]&gt;</msg>
<var>${login_response}</var>
<arg>reqres</arg>
<arg>/api/login</arg>
<arg>json=${login_json}</arg>
<arg>headers=&amp;{content_type_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:30.142911" elapsed="0.136889"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.279800" level="INFO">${token} = None</msg>
<var>${token}</var>
<arg>${null}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:30.279800" elapsed="0.000000"/>
</kw>
<kw name="Convert String To Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.281101" level="INFO">${response_json} = {'token': 'QpwL5tke4Pnpja7X4'}</msg>
<var>${response_json}</var>
<arg>${login_response.content}</arg>
<doc>Convert String to JSON object</doc>
<status status="PASS" start="2024-08-13T13:38:30.279800" elapsed="0.001301"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-08-13T13:38:30.288827" level="INFO">@{tokens} = [ QpwL5tke4Pnpja7X4 ]</msg>
<var>@{tokens}</var>
<arg>${response_json}</arg>
<arg>$..token</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-08-13T13:38:30.281101" elapsed="0.007726"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.288827" level="INFO">${token} = QpwL5tke4Pnpja7X4</msg>
<var>${token}</var>
<arg>${tokens[0]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-08-13T13:38:30.288827" elapsed="0.001018"/>
</kw>
<return>
<value>${token}</value>
<status status="PASS" start="2024-08-13T13:38:30.289845" elapsed="0.000000"/>
</return>
<msg time="2024-08-13T13:38:30.289845" level="INFO">${token} = QpwL5tke4Pnpja7X4</msg>
<var>${token}</var>
<status status="PASS" start="2024-08-13T13:38:30.141784" elapsed="0.148061"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>TOKEN:\n${token}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.289845" elapsed="0.000976"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:30.141784" elapsed="0.149037"/>
</test>
<test id="s1-s8-t2" name="View Github Repo With Valid Token Authentication" line="18">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:30.291821" level="INFO">Creating Session using : alias=github, url=https://api.github.com/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>github</arg>
<arg>${guthub_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-13T13:38:30.291821" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.292822" level="INFO">&amp;{header} = { Content-Type=application/json | Authorization=Bearer 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 }</msg>
<var>&amp;{header}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${github_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:30.291821" elapsed="0.001001"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:30.571119" level="INFO">GET Request : url=https://api.github.com/repos/HamiTheTank/test_framework 
 path_url=/repos/HamiTheTank/test_framework 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer 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'} 
 body=None 
 </msg>
<msg time="2024-08-13T13:38:30.571119" level="INFO">GET Response : url=https://api.github.com/repos/HamiTheTank/test_framework 
 status=200, reason=OK 
 headers={'Date': 'Tue, 13 Aug 2024 11:38:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Cache-Control': 'private, max-age=60, s-maxage=60', 'Vary': 'Accept, Authorization, Cookie, X-GitHub-OTP,Accept-Encoding, Accept, X-Requested-With', 'ETag': 'W/"e2de84f550a127b8e1f08671ada22ca07bcac8f8f6b577b3f80d05a4bbea30a9"', 'Last-Modified': 'Tue, 23 Mar 2021 11:47:15 GMT', 'X-OAuth-Scopes': 'repo', 'X-Accepted-OAuth-Scopes': 'repo', 'github-authentication-token-expiration': '2024-09-11 11:57:53 UTC', 'X-GitHub-Media-Type': 'github.v3; format=json', 'x-github-api-version-selected': '2022-11-28', 'X-RateLimit-Limit': '5000', 'X-RateLimit-Remaining': '4998', 'X-RateLimit-Reset': '1723552576', 'X-RateLimit-Used': '2', 'X-RateLimit-Resource': 'core', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset', 'Access-Control-Allow-Origin': '*', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '0', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'Content-Security-Policy': "default-src 'none'", 'Content-Encoding': 'gzip', 'Transfer-Encoding': 'chunked', 'Server': 'github.com', 'X-GitHub-Request-Id': 'C6C1:325814:20E5475:2148B5C:66BB45B8'} 
 body={"id":337338792,"node_id":"MDEwOlJlcG9zaXRvcnkzMzczMzg3OTI=","name":"test_framework","full_name":"HamiTheTank/test_framework","private":true,"owner":{"login":"HamiTheTank","id":45032569,"node_id":"MDQ6VXNlcjQ1MDMyNTY5","avatar_url":"https://avatars.githubusercontent.com/u/45032569?v=4","gravatar_id":"","url":"https://api.github.com/users/HamiTheTank","html_url":"https://github.com/HamiTheTank","followers_url":"https://api.github.com/users/HamiTheTank/followers","following_url":"https://api.github.com/users/HamiTheTank/following{/other_user}","gists_url":"https://api.github.com/users/HamiTheTank/gists{/gist_id}","starred_url":"https://api.github.com/users/HamiTheTank/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HamiTheTank/subscriptions","organizations_url":"https://api.github.com/users/HamiTheTank/orgs","repos_url":"https://api.github.com/users/HamiTheTank/repos","events_url":"https://api.github.com/users/HamiTheTank/events{/privacy}","received_events_url":"https://api.github.com/users/HamiTheTank/received_events","type":"User","site_admin":false},"html_url":"https://github.com/HamiTheTank/test_framework","description":"Java + Selenium + TestNG framework for test automation","fork":false,"url":"https://api.github.com/repos/HamiTheTank/test_framework","forks_url":"https://api.github.com/repos/HamiTheTank/test_framework/forks","keys_url":"https://api.github.com/repos/HamiTheTank/test_framework/keys{/key_id}","collaborators_url":"https://api.github.com/repos/HamiTheTank/test_framework/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/HamiTheTank/test_framework/teams","hooks_url":"https://api.github.com/repos/HamiTheTank/test_framework/hooks","issue_events_url":"https://api.github.com/repos/HamiTheTank/test_framework/issues/events{/number}","events_url":"https://api.github.com/repos/HamiTheTank/test_framework/events","assignees_url":"https://api.github.com/repos/HamiTheTank/test_framework/assignees{/user}","branches_url":"https://api.github.com/repos/HamiTheTank/test_framework/branches{/branch}","tags_url":"https://api.github.com/repos/HamiTheTank/test_framework/tags","blobs_url":"https://api.github.com/repos/HamiTheTank/test_framework/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/HamiTheTank/test_framework/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/HamiTheTank/test_framework/git/refs{/sha}","trees_url":"https://api.github.com/repos/HamiTheTank/test_framework/git/trees{/sha}","statuses_url":"https://api.github.com/repos/HamiTheTank/test_framework/statuses/{sha}","languages_url":"https://api.github.com/repos/HamiTheTank/test_framework/languages","stargazers_url":"https://api.github.com/repos/HamiTheTank/test_framework/stargazers","contributors_url":"https://api.github.com/repos/HamiTheTank/test_framework/contributors","subscribers_url":"https://api.github.com/repos/HamiTheTank/test_framework/subscribers","subscription_url":"https://api.github.com/repos/HamiTheTank/test_framework/subscription","commits_url":"https://api.github.com/repos/HamiTheTank/test_framework/commits{/sha}","git_commits_url":"https://api.github.com/repos/HamiTheTank/test_framework/git/commits{/sha}","comments_url":"https://api.github.com/repos/HamiTheTank/test_framework/comments{/number}","issue_comment_url":"https://api.github.com/repos/HamiTheTank/test_framework/issues/comments{/number}","contents_url":"https://api.github.com/repos/HamiTheTank/test_framework/contents/{+path}","compare_url":"https://api.github.com/repos/HamiTheTank/test_framework/compare/{base}...{head}","merges_url":"https://api.github.com/repos/HamiTheTank/test_framework/merges","archive_url":"https://api.github.com/repos/HamiTheTank/test_framework/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/HamiTheTank/test_framework/downloads","issues_url":"https://api.github.com/repos/HamiTheTank/test_framework/issues{/number}","pulls_url":"https://api.github.com/repos/HamiTheTank/test_framework/pulls{/number}","milestones_url":"https://api.github.com/repos/HamiTheTank/test_framework/milestones{/number}","notifications_url":"https://api.github.com/repos/HamiTheTank/test_framework/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/HamiTheTank/test_framework/labels{/name}","releases_url":"https://api.github.com/repos/HamiTheTank/test_framework/releases{/id}","deployments_url":"https://api.github.com/repos/HamiTheTank/test_framework/deployments","created_at":"2021-02-09T08:28:54Z","updated_at":"2021-03-23T11:47:15Z","pushed_at":"2021-03-23T11:47:13Z","git_url":"git://github.com/HamiTheTank/test_framework.git","ssh_url":"git@github.com:HamiTheTank/test_framework.git","clone_url":"https://github.com/HamiTheTank/test_framework.git","svn_url":"https://github.com/HamiTheTank/test_framework","homepage":null,"size":19,"stargazers_count":0,"watchers_count":0,"language":"Java","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":false,"has_pages":false,"has_discussions":false,"forks_count":0,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":0,"license":null,"allow_forking":true,"is_template":false,"web_commit_signoff_required":false,"topics":[],"visibility":"private","forks":0,"open_issues":0,"watchers":0,"default_branch":"main","permissions":{"admin":true,"maintain":true,"push":true,"triage":true,"pull":true},"temp_clone_token":"AKXSI6ITHZQNKM3DJOUJ2P3GXNDOI","allow_squash_merge":true,"allow_merge_commit":true,"allow_rebase_merge":true,"allow_auto_merge":false,"delete_branch_on_merge":false,"allow_update_branch":false,"use_squash_pr_title_as_default":false,"squash_merge_commit_message":"COMMIT_MESSAGES","squash_merge_commit_title":"COMMIT_OR_PR_TITLE","merge_commit_message":"PR_TITLE","merge_commit_title":"MERGE_MESSAGE","network_count":0,"subscribers_count":1} 
 </msg>
<msg time="2024-08-13T13:38:30.571119" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.github.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:30.572525" level="INFO">${valid_get_request} = &lt;Response [200]&gt;</msg>
<var>${valid_get_request}</var>
<arg>github</arg>
<arg>/repos/HamiTheTank/test_framework</arg>
<arg>headers=&amp;{header}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-08-13T13:38:30.292822" elapsed="0.279703"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${valid_get_request.content}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.572867" elapsed="0.002087"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.574954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${valid_get_request.status_code}</arg>
<arg>200</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2024-08-13T13:38:30.574954" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:30.291821" elapsed="0.284132"/>
</test>
<test id="s1-s8-t3" name="View Github Repo With Inalid Token Authentication" line="25">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:30.575953" level="INFO">Creating Session using : alias=github, url=https://api.github.com/, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>github</arg>
<arg>${guthub_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-08-13T13:38:30.575953" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-08-13T13:38:30.575953" level="INFO">${header} = {'Content-Type': 'application/json', 'Authorization': 'Bearer XXX_dXjUxdFNgd6S6mTsZSpertemFTB37Q0s1ZZZ'}</msg>
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<arg>Authorization=Bearer ${github_invalid_token}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-08-13T13:38:30.575953" elapsed="0.000000"/>
</kw>
<try>
<branch type="TRY">
<kw name="Run Keyword And Expect Error" owner="BuiltIn">
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-08-13T13:38:30.803618" level="INFO">GET Request : url=https://api.github.com/repos/HamiTheTank/test_framework 
 path_url=/repos/HamiTheTank/test_framework 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Authorization': 'Bearer XXX_dXjUxdFNgd6S6mTsZSpertemFTB37Q0s1ZZZ'} 
 body=None 
 </msg>
<msg time="2024-08-13T13:38:30.803618" level="INFO">GET Response : url=https://api.github.com/repos/HamiTheTank/test_framework 
 status=401, reason=Unauthorized 
 headers={'Date': 'Tue, 13 Aug 2024 11:38:32 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '95', 'X-GitHub-Media-Type': 'github.v3; format=json', 'X-RateLimit-Limit': '60', 'X-RateLimit-Remaining': '58', 'X-RateLimit-Reset': '1723552577', 'X-RateLimit-Used': '2', 'X-RateLimit-Resource': 'core', 'Access-Control-Expose-Headers': 'ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset', 'Access-Control-Allow-Origin': '*', 'Strict-Transport-Security': 'max-age=31536000; includeSubdomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '0', 'Referrer-Policy': 'origin-when-cross-origin, strict-origin-when-cross-origin', 'Content-Security-Policy': "default-src 'none'", 'Vary': 'Accept-Encoding, Accept, X-Requested-With', 'Server': 'github.com', 'X-GitHub-Request-Id': 'C6C2:325814:20E5588:2148C90:66BB45B8'} 
 body={"message":"Bad credentials","documentation_url":"https://docs.github.com/rest","status":"401"} 
 </msg>
<msg time="2024-08-13T13:38:30.803618" level="INFO">C:\Users\Vikto\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'api.github.com'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-08-13T13:38:30.804671" level="FAIL">HTTPError: 401 Client Error: Unauthorized for url: https://api.github.com/repos/HamiTheTank/test_framework</msg>
<arg>github</arg>
<arg>/repos/HamiTheTank/test_framework</arg>
<arg>headers=&amp;{header}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="FAIL" start="2024-08-13T13:38:30.575953" elapsed="0.229703">HTTPError: 401 Client Error: Unauthorized for url: https://api.github.com/repos/HamiTheTank/test_framework</status>
</kw>
<msg time="2024-08-13T13:38:30.805656" level="INFO">${error_msg} = HTTPError: 401 Client Error: Unauthorized for url: https://api.github.com/repos/HamiTheTank/test_framework</msg>
<var>${error_msg}</var>
<arg>STARTS: HTTPError</arg>
<arg>GET On Session</arg>
<arg>github</arg>
<arg>/repos/HamiTheTank/test_framework</arg>
<arg>headers=&amp;{header}</arg>
<doc>Runs the keyword and checks that the expected error occurred.</doc>
<status status="PASS" start="2024-08-13T13:38:30.575953" elapsed="0.229703"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n\nERROR MESSAGE:\n${error_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-08-13T13:38:30.805656" elapsed="0.001002"/>
</kw>
<kw name="Should Start With" owner="BuiltIn">
<arg>${error_msg}</arg>
<arg>HTTPError: 401</arg>
<doc>Fails if the string ``str1`` does not start with the string ``str2``.</doc>
<status status="PASS" start="2024-08-13T13:38:30.806658" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-08-13T13:38:30.575953" elapsed="0.230705"/>
</branch>
<branch type="EXCEPT">
<kw name="Fail" owner="BuiltIn">
<arg>msg=Failed to access URL</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-08-13T13:38:30.806658" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-08-13T13:38:30.806658" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-08-13T13:38:30.575953" elapsed="0.230705"/>
</try>
<status status="PASS" start="2024-08-13T13:38:30.575953" elapsed="0.230705"/>
</test>
<status status="PASS" start="2024-08-13T13:38:30.138629" elapsed="0.669008"/>
</suite>
<status status="PASS" start="2024-08-13T13:38:21.352334" elapsed="9.455303"/>
</suite>
<statistics>
<total>
<stat pass="22" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="14" fail="0" skip="0">api</stat>
<stat pass="1" fail="0" skip="0">api-test</stat>
</tag>
<suite>
<stat pass="22" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="TC 001 Get Request">Tests.TC 001 Get Request</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="TC 002 Post Request">Tests.TC 002 Post Request</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="TC 003 Delete Request">Tests.TC 003 Delete Request</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="TC 004 Put Request">Tests.TC 004 Put Request</stat>
<stat pass="9" fail="0" skip="0" id="s1-s5" name="TC 005 Post With Simple Template">Tests.TC 005 Post With Simple Template</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="TC 006 Post With Files As Template Argument">Tests.TC 006 Post With Files As Template Argument</stat>
<stat pass="4" fail="0" skip="0" id="s1-s7" name="TC 007 Process Complex Json">Tests.TC 007 Process Complex Json</stat>
<stat pass="3" fail="0" skip="0" id="s1-s8" name="TC 008 Token Authentication">Tests.TC 008 Token Authentication</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
